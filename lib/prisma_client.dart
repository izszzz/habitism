library prisma.client; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'dart:convert' as _i5;

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:orm/configure.dart' as _i2;
import 'package:orm/dmmf.dart' as _i4;
import 'package:orm/orm.dart' as _i1;
import 'package:orm/orm.dart'
    show $PrismaNullCopyWith, PrismaNull, dateTimeToJson;

import 'prisma_configurator.dart' as _i3;

export 'package:orm/orm.dart' show Datasource, PrismaClient, PrismaNull;
export 'package:orm/orm.dart' show TransactionIsolationLevel;

part 'prisma_client.g.dart';
part 'prisma_client.freezed.dart';
// GENERATED CODE - DO NOT MODIFY BY HAND
//
// ignore_for_file: camel_case_types, constant_identifier_names, depend_on_referenced_packages, invalid_annotation_target, non_constant_identifier_names, unnecessary_import, unused_import, unused_shown_name
//
//******************************************************************************
// This file was generated by Prisma
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum ChecklistScalarFieldEnum { id, taskId }

enum SortOrder { asc, desc }

enum TaskScalarFieldEnum { id, name }

@freezed
class TaskWhereInput_AND
    with _$TaskWhereInput_AND
    implements _i1.JsonSerializable {
  const factory TaskWhereInput_AND.withTaskWhereInput(TaskWhereInput value) =
      TaskWhereInput_AND_withTaskWhereInput;

  const factory TaskWhereInput_AND.withTaskWhereInputList(
      List<TaskWhereInput> value) = TaskWhereInput_AND_withTaskWhereInputList;

  factory TaskWhereInput_AND.fromJson(Map<String, dynamic> json) =>
      _$TaskWhereInput_ANDFromJson(json);
}

@freezed
class TaskWhereInput_NOT
    with _$TaskWhereInput_NOT
    implements _i1.JsonSerializable {
  const factory TaskWhereInput_NOT.withTaskWhereInput(TaskWhereInput value) =
      TaskWhereInput_NOT_withTaskWhereInput;

  const factory TaskWhereInput_NOT.withTaskWhereInputList(
      List<TaskWhereInput> value) = TaskWhereInput_NOT_withTaskWhereInputList;

  factory TaskWhereInput_NOT.fromJson(Map<String, dynamic> json) =>
      _$TaskWhereInput_NOTFromJson(json);
}

@freezed
class TaskWhereInput_id
    with _$TaskWhereInput_id
    implements _i1.JsonSerializable {
  const factory TaskWhereInput_id.withIntFilter(IntFilter value) =
      TaskWhereInput_id_withIntFilter;

  const factory TaskWhereInput_id.withInt(int value) =
      TaskWhereInput_id_withInt;

  factory TaskWhereInput_id.fromJson(Map<String, dynamic> json) =>
      _$TaskWhereInput_idFromJson(json);
}

@freezed
class TaskWhereInput_name
    with _$TaskWhereInput_name
    implements _i1.JsonSerializable {
  const factory TaskWhereInput_name.withStringFilter(StringFilter value) =
      TaskWhereInput_name_withStringFilter;

  const factory TaskWhereInput_name.withString(String value) =
      TaskWhereInput_name_withString;

  factory TaskWhereInput_name.fromJson(Map<String, dynamic> json) =>
      _$TaskWhereInput_nameFromJson(json);
}

@freezed
class TaskWhereInput with _$TaskWhereInput implements _i1.JsonSerializable {
  factory TaskWhereInput.fromJson(Map<String, dynamic> json) =>
      _$TaskWhereInputFromJson(json);

  const factory TaskWhereInput({
    @JsonKey(name: 'AND') TaskWhereInput_AND? AND,
    @JsonKey(name: 'OR') _i1.PrismaNullable<List<TaskWhereInput>> OR,
    @JsonKey(name: 'NOT') TaskWhereInput_NOT? NOT,
    @JsonKey(name: 'id') TaskWhereInput_id? id,
    @JsonKey(name: 'name') TaskWhereInput_name? name,
    @JsonKey(name: 'checklists')
        _i1.PrismaNullable<ChecklistListRelationFilter> checklists,
  }) = _TaskWhereInput;
}

@freezed
class TaskOrderByWithRelationInput
    with _$TaskOrderByWithRelationInput
    implements _i1.JsonSerializable {
  factory TaskOrderByWithRelationInput.fromJson(Map<String, dynamic> json) =>
      _$TaskOrderByWithRelationInputFromJson(json);

  const factory TaskOrderByWithRelationInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
    @JsonKey(name: 'checklists')
        _i1.PrismaNullable<ChecklistOrderByRelationAggregateInput> checklists,
  }) = _TaskOrderByWithRelationInput;
}

@freezed
class TaskWhereUniqueInput
    with _$TaskWhereUniqueInput
    implements _i1.JsonSerializable {
  factory TaskWhereUniqueInput.fromJson(Map<String, dynamic> json) =>
      _$TaskWhereUniqueInputFromJson(json);

  const factory TaskWhereUniqueInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<int> id}) =
      _TaskWhereUniqueInput;
}

@freezed
class TaskOrderByWithAggregationInput
    with _$TaskOrderByWithAggregationInput
    implements _i1.JsonSerializable {
  factory TaskOrderByWithAggregationInput.fromJson(Map<String, dynamic> json) =>
      _$TaskOrderByWithAggregationInputFromJson(json);

  const factory TaskOrderByWithAggregationInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
    @JsonKey(name: '_count')
        _i1.PrismaNullable<TaskCountOrderByAggregateInput> prisma__count,
    @JsonKey(name: '_avg')
        _i1.PrismaNullable<TaskAvgOrderByAggregateInput> prisma__avg,
    @JsonKey(name: '_max')
        _i1.PrismaNullable<TaskMaxOrderByAggregateInput> prisma__max,
    @JsonKey(name: '_min')
        _i1.PrismaNullable<TaskMinOrderByAggregateInput> prisma__min,
    @JsonKey(name: '_sum')
        _i1.PrismaNullable<TaskSumOrderByAggregateInput> prisma__sum,
  }) = _TaskOrderByWithAggregationInput;
}

@freezed
class TaskScalarWhereWithAggregatesInput_AND
    with _$TaskScalarWhereWithAggregatesInput_AND
    implements _i1.JsonSerializable {
  const factory TaskScalarWhereWithAggregatesInput_AND.withTaskScalarWhereWithAggregatesInput(
          TaskScalarWhereWithAggregatesInput value) =
      TaskScalarWhereWithAggregatesInput_AND_withTaskScalarWhereWithAggregatesInput;

  const factory TaskScalarWhereWithAggregatesInput_AND.withTaskScalarWhereWithAggregatesInputList(
          List<TaskScalarWhereWithAggregatesInput> value) =
      TaskScalarWhereWithAggregatesInput_AND_withTaskScalarWhereWithAggregatesInputList;

  factory TaskScalarWhereWithAggregatesInput_AND.fromJson(
          Map<String, dynamic> json) =>
      _$TaskScalarWhereWithAggregatesInput_ANDFromJson(json);
}

@freezed
class TaskScalarWhereWithAggregatesInput_NOT
    with _$TaskScalarWhereWithAggregatesInput_NOT
    implements _i1.JsonSerializable {
  const factory TaskScalarWhereWithAggregatesInput_NOT.withTaskScalarWhereWithAggregatesInput(
          TaskScalarWhereWithAggregatesInput value) =
      TaskScalarWhereWithAggregatesInput_NOT_withTaskScalarWhereWithAggregatesInput;

  const factory TaskScalarWhereWithAggregatesInput_NOT.withTaskScalarWhereWithAggregatesInputList(
          List<TaskScalarWhereWithAggregatesInput> value) =
      TaskScalarWhereWithAggregatesInput_NOT_withTaskScalarWhereWithAggregatesInputList;

  factory TaskScalarWhereWithAggregatesInput_NOT.fromJson(
          Map<String, dynamic> json) =>
      _$TaskScalarWhereWithAggregatesInput_NOTFromJson(json);
}

@freezed
class TaskScalarWhereWithAggregatesInput_id
    with _$TaskScalarWhereWithAggregatesInput_id
    implements _i1.JsonSerializable {
  const factory TaskScalarWhereWithAggregatesInput_id.withIntWithAggregatesFilter(
          IntWithAggregatesFilter value) =
      TaskScalarWhereWithAggregatesInput_id_withIntWithAggregatesFilter;

  const factory TaskScalarWhereWithAggregatesInput_id.withInt(int value) =
      TaskScalarWhereWithAggregatesInput_id_withInt;

  factory TaskScalarWhereWithAggregatesInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$TaskScalarWhereWithAggregatesInput_idFromJson(json);
}

@freezed
class TaskScalarWhereWithAggregatesInput_name
    with _$TaskScalarWhereWithAggregatesInput_name
    implements _i1.JsonSerializable {
  const factory TaskScalarWhereWithAggregatesInput_name.withStringWithAggregatesFilter(
          StringWithAggregatesFilter value) =
      TaskScalarWhereWithAggregatesInput_name_withStringWithAggregatesFilter;

  const factory TaskScalarWhereWithAggregatesInput_name.withString(
      String value) = TaskScalarWhereWithAggregatesInput_name_withString;

  factory TaskScalarWhereWithAggregatesInput_name.fromJson(
          Map<String, dynamic> json) =>
      _$TaskScalarWhereWithAggregatesInput_nameFromJson(json);
}

@freezed
class TaskScalarWhereWithAggregatesInput
    with _$TaskScalarWhereWithAggregatesInput
    implements _i1.JsonSerializable {
  factory TaskScalarWhereWithAggregatesInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskScalarWhereWithAggregatesInputFromJson(json);

  const factory TaskScalarWhereWithAggregatesInput({
    @JsonKey(name: 'AND') TaskScalarWhereWithAggregatesInput_AND? AND,
    @JsonKey(name: 'OR')
        _i1.PrismaNullable<List<TaskScalarWhereWithAggregatesInput>> OR,
    @JsonKey(name: 'NOT') TaskScalarWhereWithAggregatesInput_NOT? NOT,
    @JsonKey(name: 'id') TaskScalarWhereWithAggregatesInput_id? id,
    @JsonKey(name: 'name') TaskScalarWhereWithAggregatesInput_name? name,
  }) = _TaskScalarWhereWithAggregatesInput;
}

@freezed
class ChecklistWhereInput_AND
    with _$ChecklistWhereInput_AND
    implements _i1.JsonSerializable {
  const factory ChecklistWhereInput_AND.withChecklistWhereInput(
          ChecklistWhereInput value) =
      ChecklistWhereInput_AND_withChecklistWhereInput;

  const factory ChecklistWhereInput_AND.withChecklistWhereInputList(
          List<ChecklistWhereInput> value) =
      ChecklistWhereInput_AND_withChecklistWhereInputList;

  factory ChecklistWhereInput_AND.fromJson(Map<String, dynamic> json) =>
      _$ChecklistWhereInput_ANDFromJson(json);
}

@freezed
class ChecklistWhereInput_NOT
    with _$ChecklistWhereInput_NOT
    implements _i1.JsonSerializable {
  const factory ChecklistWhereInput_NOT.withChecklistWhereInput(
          ChecklistWhereInput value) =
      ChecklistWhereInput_NOT_withChecklistWhereInput;

  const factory ChecklistWhereInput_NOT.withChecklistWhereInputList(
          List<ChecklistWhereInput> value) =
      ChecklistWhereInput_NOT_withChecklistWhereInputList;

  factory ChecklistWhereInput_NOT.fromJson(Map<String, dynamic> json) =>
      _$ChecklistWhereInput_NOTFromJson(json);
}

@freezed
class ChecklistWhereInput_id
    with _$ChecklistWhereInput_id
    implements _i1.JsonSerializable {
  const factory ChecklistWhereInput_id.withIntFilter(IntFilter value) =
      ChecklistWhereInput_id_withIntFilter;

  const factory ChecklistWhereInput_id.withInt(int value) =
      ChecklistWhereInput_id_withInt;

  factory ChecklistWhereInput_id.fromJson(Map<String, dynamic> json) =>
      _$ChecklistWhereInput_idFromJson(json);
}

@freezed
class ChecklistWhereInput_task
    with _$ChecklistWhereInput_task
    implements _i1.JsonSerializable {
  const factory ChecklistWhereInput_task.withTaskRelationFilter(
          TaskRelationFilter value) =
      ChecklistWhereInput_task_withTaskRelationFilter;

  const factory ChecklistWhereInput_task.withTaskWhereInput(
      TaskWhereInput value) = ChecklistWhereInput_task_withTaskWhereInput;

  factory ChecklistWhereInput_task.fromJson(Map<String, dynamic> json) =>
      _$ChecklistWhereInput_taskFromJson(json);
}

@freezed
class ChecklistWhereInput_taskId
    with _$ChecklistWhereInput_taskId
    implements _i1.JsonSerializable {
  const factory ChecklistWhereInput_taskId.withIntFilter(IntFilter value) =
      ChecklistWhereInput_taskId_withIntFilter;

  const factory ChecklistWhereInput_taskId.withInt(int value) =
      ChecklistWhereInput_taskId_withInt;

  factory ChecklistWhereInput_taskId.fromJson(Map<String, dynamic> json) =>
      _$ChecklistWhereInput_taskIdFromJson(json);
}

@freezed
class ChecklistWhereInput
    with _$ChecklistWhereInput
    implements _i1.JsonSerializable {
  factory ChecklistWhereInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistWhereInputFromJson(json);

  const factory ChecklistWhereInput({
    @JsonKey(name: 'AND') ChecklistWhereInput_AND? AND,
    @JsonKey(name: 'OR') _i1.PrismaNullable<List<ChecklistWhereInput>> OR,
    @JsonKey(name: 'NOT') ChecklistWhereInput_NOT? NOT,
    @JsonKey(name: 'id') ChecklistWhereInput_id? id,
    @JsonKey(name: 'task') ChecklistWhereInput_task? task,
    @JsonKey(name: 'taskId') ChecklistWhereInput_taskId? taskId,
  }) = _ChecklistWhereInput;
}

@freezed
class ChecklistOrderByWithRelationInput
    with _$ChecklistOrderByWithRelationInput
    implements _i1.JsonSerializable {
  factory ChecklistOrderByWithRelationInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistOrderByWithRelationInputFromJson(json);

  const factory ChecklistOrderByWithRelationInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'task')
        _i1.PrismaNullable<TaskOrderByWithRelationInput> task,
    @JsonKey(name: 'taskId') _i1.PrismaNullable<SortOrder> taskId,
  }) = _ChecklistOrderByWithRelationInput;
}

@freezed
class ChecklistWhereUniqueInput
    with _$ChecklistWhereUniqueInput
    implements _i1.JsonSerializable {
  factory ChecklistWhereUniqueInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistWhereUniqueInputFromJson(json);

  const factory ChecklistWhereUniqueInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<int> id}) =
      _ChecklistWhereUniqueInput;
}

@freezed
class ChecklistOrderByWithAggregationInput
    with _$ChecklistOrderByWithAggregationInput
    implements _i1.JsonSerializable {
  factory ChecklistOrderByWithAggregationInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistOrderByWithAggregationInputFromJson(json);

  const factory ChecklistOrderByWithAggregationInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'taskId') _i1.PrismaNullable<SortOrder> taskId,
    @JsonKey(name: '_count')
        _i1.PrismaNullable<ChecklistCountOrderByAggregateInput> prisma__count,
    @JsonKey(name: '_avg')
        _i1.PrismaNullable<ChecklistAvgOrderByAggregateInput> prisma__avg,
    @JsonKey(name: '_max')
        _i1.PrismaNullable<ChecklistMaxOrderByAggregateInput> prisma__max,
    @JsonKey(name: '_min')
        _i1.PrismaNullable<ChecklistMinOrderByAggregateInput> prisma__min,
    @JsonKey(name: '_sum')
        _i1.PrismaNullable<ChecklistSumOrderByAggregateInput> prisma__sum,
  }) = _ChecklistOrderByWithAggregationInput;
}

@freezed
class ChecklistScalarWhereWithAggregatesInput_AND
    with _$ChecklistScalarWhereWithAggregatesInput_AND
    implements _i1.JsonSerializable {
  const factory ChecklistScalarWhereWithAggregatesInput_AND.withChecklistScalarWhereWithAggregatesInput(
          ChecklistScalarWhereWithAggregatesInput value) =
      ChecklistScalarWhereWithAggregatesInput_AND_withChecklistScalarWhereWithAggregatesInput;

  const factory ChecklistScalarWhereWithAggregatesInput_AND.withChecklistScalarWhereWithAggregatesInputList(
          List<ChecklistScalarWhereWithAggregatesInput> value) =
      ChecklistScalarWhereWithAggregatesInput_AND_withChecklistScalarWhereWithAggregatesInputList;

  factory ChecklistScalarWhereWithAggregatesInput_AND.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistScalarWhereWithAggregatesInput_ANDFromJson(json);
}

@freezed
class ChecklistScalarWhereWithAggregatesInput_NOT
    with _$ChecklistScalarWhereWithAggregatesInput_NOT
    implements _i1.JsonSerializable {
  const factory ChecklistScalarWhereWithAggregatesInput_NOT.withChecklistScalarWhereWithAggregatesInput(
          ChecklistScalarWhereWithAggregatesInput value) =
      ChecklistScalarWhereWithAggregatesInput_NOT_withChecklistScalarWhereWithAggregatesInput;

  const factory ChecklistScalarWhereWithAggregatesInput_NOT.withChecklistScalarWhereWithAggregatesInputList(
          List<ChecklistScalarWhereWithAggregatesInput> value) =
      ChecklistScalarWhereWithAggregatesInput_NOT_withChecklistScalarWhereWithAggregatesInputList;

  factory ChecklistScalarWhereWithAggregatesInput_NOT.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistScalarWhereWithAggregatesInput_NOTFromJson(json);
}

@freezed
class ChecklistScalarWhereWithAggregatesInput_id
    with _$ChecklistScalarWhereWithAggregatesInput_id
    implements _i1.JsonSerializable {
  const factory ChecklistScalarWhereWithAggregatesInput_id.withIntWithAggregatesFilter(
          IntWithAggregatesFilter value) =
      ChecklistScalarWhereWithAggregatesInput_id_withIntWithAggregatesFilter;

  const factory ChecklistScalarWhereWithAggregatesInput_id.withInt(int value) =
      ChecklistScalarWhereWithAggregatesInput_id_withInt;

  factory ChecklistScalarWhereWithAggregatesInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistScalarWhereWithAggregatesInput_idFromJson(json);
}

@freezed
class ChecklistScalarWhereWithAggregatesInput_taskId
    with _$ChecklistScalarWhereWithAggregatesInput_taskId
    implements _i1.JsonSerializable {
  const factory ChecklistScalarWhereWithAggregatesInput_taskId.withIntWithAggregatesFilter(
          IntWithAggregatesFilter value) =
      ChecklistScalarWhereWithAggregatesInput_taskId_withIntWithAggregatesFilter;

  const factory ChecklistScalarWhereWithAggregatesInput_taskId.withInt(
      int value) = ChecklistScalarWhereWithAggregatesInput_taskId_withInt;

  factory ChecklistScalarWhereWithAggregatesInput_taskId.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistScalarWhereWithAggregatesInput_taskIdFromJson(json);
}

@freezed
class ChecklistScalarWhereWithAggregatesInput
    with _$ChecklistScalarWhereWithAggregatesInput
    implements _i1.JsonSerializable {
  factory ChecklistScalarWhereWithAggregatesInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistScalarWhereWithAggregatesInputFromJson(json);

  const factory ChecklistScalarWhereWithAggregatesInput({
    @JsonKey(name: 'AND') ChecklistScalarWhereWithAggregatesInput_AND? AND,
    @JsonKey(name: 'OR')
        _i1.PrismaNullable<List<ChecklistScalarWhereWithAggregatesInput>> OR,
    @JsonKey(name: 'NOT') ChecklistScalarWhereWithAggregatesInput_NOT? NOT,
    @JsonKey(name: 'id') ChecklistScalarWhereWithAggregatesInput_id? id,
    @JsonKey(name: 'taskId')
        ChecklistScalarWhereWithAggregatesInput_taskId? taskId,
  }) = _ChecklistScalarWhereWithAggregatesInput;
}

@freezed
class TaskCreateInput with _$TaskCreateInput implements _i1.JsonSerializable {
  factory TaskCreateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskCreateInputFromJson(json);

  const factory TaskCreateInput({
    @JsonKey(name: 'name') required String name,
    @JsonKey(name: 'checklists')
        _i1.PrismaNullable<ChecklistCreateNestedManyWithoutTaskInput>
            checklists,
  }) = _TaskCreateInput;
}

@freezed
class TaskUncheckedCreateInput
    with _$TaskUncheckedCreateInput
    implements _i1.JsonSerializable {
  factory TaskUncheckedCreateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskUncheckedCreateInputFromJson(json);

  const factory TaskUncheckedCreateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<int> id,
    @JsonKey(name: 'name') required String name,
    @JsonKey(name: 'checklists')
        _i1.PrismaNullable<ChecklistUncheckedCreateNestedManyWithoutTaskInput>
            checklists,
  }) = _TaskUncheckedCreateInput;
}

@freezed
class TaskUpdateInput_name
    with _$TaskUpdateInput_name
    implements _i1.JsonSerializable {
  const factory TaskUpdateInput_name.withString(String value) =
      TaskUpdateInput_name_withString;

  const factory TaskUpdateInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      TaskUpdateInput_name_withStringFieldUpdateOperationsInput;

  factory TaskUpdateInput_name.fromJson(Map<String, dynamic> json) =>
      _$TaskUpdateInput_nameFromJson(json);
}

@freezed
class TaskUpdateInput with _$TaskUpdateInput implements _i1.JsonSerializable {
  factory TaskUpdateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskUpdateInputFromJson(json);

  const factory TaskUpdateInput({
    @JsonKey(name: 'name') TaskUpdateInput_name? name,
    @JsonKey(name: 'checklists')
        _i1.PrismaNullable<ChecklistUpdateManyWithoutTaskNestedInput>
            checklists,
  }) = _TaskUpdateInput;
}

@freezed
class TaskUncheckedUpdateInput_id
    with _$TaskUncheckedUpdateInput_id
    implements _i1.JsonSerializable {
  const factory TaskUncheckedUpdateInput_id.withInt(int value) =
      TaskUncheckedUpdateInput_id_withInt;

  const factory TaskUncheckedUpdateInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      TaskUncheckedUpdateInput_id_withIntFieldUpdateOperationsInput;

  factory TaskUncheckedUpdateInput_id.fromJson(Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateInput_idFromJson(json);
}

@freezed
class TaskUncheckedUpdateInput_name
    with _$TaskUncheckedUpdateInput_name
    implements _i1.JsonSerializable {
  const factory TaskUncheckedUpdateInput_name.withString(String value) =
      TaskUncheckedUpdateInput_name_withString;

  const factory TaskUncheckedUpdateInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      TaskUncheckedUpdateInput_name_withStringFieldUpdateOperationsInput;

  factory TaskUncheckedUpdateInput_name.fromJson(Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateInput_nameFromJson(json);
}

@freezed
class TaskUncheckedUpdateInput
    with _$TaskUncheckedUpdateInput
    implements _i1.JsonSerializable {
  factory TaskUncheckedUpdateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateInputFromJson(json);

  const factory TaskUncheckedUpdateInput({
    @JsonKey(name: 'id') TaskUncheckedUpdateInput_id? id,
    @JsonKey(name: 'name') TaskUncheckedUpdateInput_name? name,
    @JsonKey(name: 'checklists')
        _i1.PrismaNullable<ChecklistUncheckedUpdateManyWithoutTaskNestedInput>
            checklists,
  }) = _TaskUncheckedUpdateInput;
}

@freezed
class TaskUpdateManyMutationInput_name
    with _$TaskUpdateManyMutationInput_name
    implements _i1.JsonSerializable {
  const factory TaskUpdateManyMutationInput_name.withString(String value) =
      TaskUpdateManyMutationInput_name_withString;

  const factory TaskUpdateManyMutationInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      TaskUpdateManyMutationInput_name_withStringFieldUpdateOperationsInput;

  factory TaskUpdateManyMutationInput_name.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpdateManyMutationInput_nameFromJson(json);
}

@freezed
class TaskUpdateManyMutationInput
    with _$TaskUpdateManyMutationInput
    implements _i1.JsonSerializable {
  factory TaskUpdateManyMutationInput.fromJson(Map<String, dynamic> json) =>
      _$TaskUpdateManyMutationInputFromJson(json);

  const factory TaskUpdateManyMutationInput(
          {@JsonKey(name: 'name') TaskUpdateManyMutationInput_name? name}) =
      _TaskUpdateManyMutationInput;
}

@freezed
class TaskUncheckedUpdateManyInput_id
    with _$TaskUncheckedUpdateManyInput_id
    implements _i1.JsonSerializable {
  const factory TaskUncheckedUpdateManyInput_id.withInt(int value) =
      TaskUncheckedUpdateManyInput_id_withInt;

  const factory TaskUncheckedUpdateManyInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      TaskUncheckedUpdateManyInput_id_withIntFieldUpdateOperationsInput;

  factory TaskUncheckedUpdateManyInput_id.fromJson(Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateManyInput_idFromJson(json);
}

@freezed
class TaskUncheckedUpdateManyInput_name
    with _$TaskUncheckedUpdateManyInput_name
    implements _i1.JsonSerializable {
  const factory TaskUncheckedUpdateManyInput_name.withString(String value) =
      TaskUncheckedUpdateManyInput_name_withString;

  const factory TaskUncheckedUpdateManyInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      TaskUncheckedUpdateManyInput_name_withStringFieldUpdateOperationsInput;

  factory TaskUncheckedUpdateManyInput_name.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateManyInput_nameFromJson(json);
}

@freezed
class TaskUncheckedUpdateManyInput
    with _$TaskUncheckedUpdateManyInput
    implements _i1.JsonSerializable {
  factory TaskUncheckedUpdateManyInput.fromJson(Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateManyInputFromJson(json);

  const factory TaskUncheckedUpdateManyInput({
    @JsonKey(name: 'id') TaskUncheckedUpdateManyInput_id? id,
    @JsonKey(name: 'name') TaskUncheckedUpdateManyInput_name? name,
  }) = _TaskUncheckedUpdateManyInput;
}

@freezed
class ChecklistCreateInput
    with _$ChecklistCreateInput
    implements _i1.JsonSerializable {
  factory ChecklistCreateInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistCreateInputFromJson(json);

  const factory ChecklistCreateInput(
          {@JsonKey(name: 'task')
              required TaskCreateNestedOneWithoutChecklistsInput task}) =
      _ChecklistCreateInput;
}

@freezed
class ChecklistUncheckedCreateInput
    with _$ChecklistUncheckedCreateInput
    implements _i1.JsonSerializable {
  factory ChecklistUncheckedCreateInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistUncheckedCreateInputFromJson(json);

  const factory ChecklistUncheckedCreateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<int> id,
    @JsonKey(name: 'taskId') required int taskId,
  }) = _ChecklistUncheckedCreateInput;
}

@freezed
class ChecklistUpdateInput
    with _$ChecklistUpdateInput
    implements _i1.JsonSerializable {
  factory ChecklistUpdateInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistUpdateInputFromJson(json);

  const factory ChecklistUpdateInput(
      {@JsonKey(name: 'task')
          _i1.PrismaNullable<TaskUpdateOneRequiredWithoutChecklistsNestedInput>
              task}) = _ChecklistUpdateInput;
}

@freezed
class ChecklistUncheckedUpdateInput_id
    with _$ChecklistUncheckedUpdateInput_id
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateInput_id.withInt(int value) =
      ChecklistUncheckedUpdateInput_id_withInt;

  const factory ChecklistUncheckedUpdateInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      ChecklistUncheckedUpdateInput_id_withIntFieldUpdateOperationsInput;

  factory ChecklistUncheckedUpdateInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateInput_idFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateInput_taskId
    with _$ChecklistUncheckedUpdateInput_taskId
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateInput_taskId.withInt(int value) =
      ChecklistUncheckedUpdateInput_taskId_withInt;

  const factory ChecklistUncheckedUpdateInput_taskId.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      ChecklistUncheckedUpdateInput_taskId_withIntFieldUpdateOperationsInput;

  factory ChecklistUncheckedUpdateInput_taskId.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateInput_taskIdFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateInput
    with _$ChecklistUncheckedUpdateInput
    implements _i1.JsonSerializable {
  factory ChecklistUncheckedUpdateInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateInputFromJson(json);

  const factory ChecklistUncheckedUpdateInput({
    @JsonKey(name: 'id') ChecklistUncheckedUpdateInput_id? id,
    @JsonKey(name: 'taskId') ChecklistUncheckedUpdateInput_taskId? taskId,
  }) = _ChecklistUncheckedUpdateInput;
}

@freezed
class ChecklistUpdateManyMutationInput
    with _$ChecklistUpdateManyMutationInput
    implements _i1.JsonSerializable {
  factory ChecklistUpdateManyMutationInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyMutationInputFromJson(json);

  const factory ChecklistUpdateManyMutationInput() =
      _ChecklistUpdateManyMutationInput;
}

@freezed
class ChecklistUncheckedUpdateManyInput_id
    with _$ChecklistUncheckedUpdateManyInput_id
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyInput_id.withInt(int value) =
      ChecklistUncheckedUpdateManyInput_id_withInt;

  const factory ChecklistUncheckedUpdateManyInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      ChecklistUncheckedUpdateManyInput_id_withIntFieldUpdateOperationsInput;

  factory ChecklistUncheckedUpdateManyInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyInput_idFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateManyInput_taskId
    with _$ChecklistUncheckedUpdateManyInput_taskId
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyInput_taskId.withInt(int value) =
      ChecklistUncheckedUpdateManyInput_taskId_withInt;

  const factory ChecklistUncheckedUpdateManyInput_taskId.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      ChecklistUncheckedUpdateManyInput_taskId_withIntFieldUpdateOperationsInput;

  factory ChecklistUncheckedUpdateManyInput_taskId.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyInput_taskIdFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateManyInput
    with _$ChecklistUncheckedUpdateManyInput
    implements _i1.JsonSerializable {
  factory ChecklistUncheckedUpdateManyInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyInputFromJson(json);

  const factory ChecklistUncheckedUpdateManyInput({
    @JsonKey(name: 'id') ChecklistUncheckedUpdateManyInput_id? id,
    @JsonKey(name: 'taskId') ChecklistUncheckedUpdateManyInput_taskId? taskId,
  }) = _ChecklistUncheckedUpdateManyInput;
}

@freezed
class IntFilter_not with _$IntFilter_not implements _i1.JsonSerializable {
  const factory IntFilter_not.withInt(int value) = IntFilter_not_withInt;

  const factory IntFilter_not.withNestedIntFilter(NestedIntFilter value) =
      IntFilter_not_withNestedIntFilter;

  factory IntFilter_not.fromJson(Map<String, dynamic> json) =>
      _$IntFilter_notFromJson(json);
}

@freezed
class IntFilter with _$IntFilter implements _i1.JsonSerializable {
  factory IntFilter.fromJson(Map<String, dynamic> json) =>
      _$IntFilterFromJson(json);

  const factory IntFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') IntFilter_not? not,
  }) = _IntFilter;
}

@freezed
class StringFilter_not with _$StringFilter_not implements _i1.JsonSerializable {
  const factory StringFilter_not.withString(String value) =
      StringFilter_not_withString;

  const factory StringFilter_not.withNestedStringFilter(
      NestedStringFilter value) = StringFilter_not_withNestedStringFilter;

  factory StringFilter_not.fromJson(Map<String, dynamic> json) =>
      _$StringFilter_notFromJson(json);
}

@freezed
class StringFilter with _$StringFilter implements _i1.JsonSerializable {
  factory StringFilter.fromJson(Map<String, dynamic> json) =>
      _$StringFilterFromJson(json);

  const factory StringFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') StringFilter_not? not,
  }) = _StringFilter;
}

@freezed
class ChecklistListRelationFilter
    with _$ChecklistListRelationFilter
    implements _i1.JsonSerializable {
  factory ChecklistListRelationFilter.fromJson(Map<String, dynamic> json) =>
      _$ChecklistListRelationFilterFromJson(json);

  const factory ChecklistListRelationFilter({
    @JsonKey(name: 'every') _i1.PrismaNullable<ChecklistWhereInput> every,
    @JsonKey(name: 'some') _i1.PrismaNullable<ChecklistWhereInput> some,
    @JsonKey(name: 'none') _i1.PrismaNullable<ChecklistWhereInput> none,
  }) = _ChecklistListRelationFilter;
}

@freezed
class ChecklistOrderByRelationAggregateInput
    with _$ChecklistOrderByRelationAggregateInput
    implements _i1.JsonSerializable {
  factory ChecklistOrderByRelationAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistOrderByRelationAggregateInputFromJson(json);

  const factory ChecklistOrderByRelationAggregateInput(
          {@JsonKey(name: '_count')
              _i1.PrismaNullable<SortOrder> prisma__count}) =
      _ChecklistOrderByRelationAggregateInput;
}

@freezed
class TaskCountOrderByAggregateInput
    with _$TaskCountOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory TaskCountOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskCountOrderByAggregateInputFromJson(json);

  const factory TaskCountOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
  }) = _TaskCountOrderByAggregateInput;
}

@freezed
class TaskAvgOrderByAggregateInput
    with _$TaskAvgOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory TaskAvgOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskAvgOrderByAggregateInputFromJson(json);

  const factory TaskAvgOrderByAggregateInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id}) =
      _TaskAvgOrderByAggregateInput;
}

@freezed
class TaskMaxOrderByAggregateInput
    with _$TaskMaxOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory TaskMaxOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskMaxOrderByAggregateInputFromJson(json);

  const factory TaskMaxOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
  }) = _TaskMaxOrderByAggregateInput;
}

@freezed
class TaskMinOrderByAggregateInput
    with _$TaskMinOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory TaskMinOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskMinOrderByAggregateInputFromJson(json);

  const factory TaskMinOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'name') _i1.PrismaNullable<SortOrder> name,
  }) = _TaskMinOrderByAggregateInput;
}

@freezed
class TaskSumOrderByAggregateInput
    with _$TaskSumOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory TaskSumOrderByAggregateInput.fromJson(Map<String, dynamic> json) =>
      _$TaskSumOrderByAggregateInputFromJson(json);

  const factory TaskSumOrderByAggregateInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id}) =
      _TaskSumOrderByAggregateInput;
}

@freezed
class IntWithAggregatesFilter_not
    with _$IntWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory IntWithAggregatesFilter_not.withInt(int value) =
      IntWithAggregatesFilter_not_withInt;

  const factory IntWithAggregatesFilter_not.withNestedIntWithAggregatesFilter(
          NestedIntWithAggregatesFilter value) =
      IntWithAggregatesFilter_not_withNestedIntWithAggregatesFilter;

  factory IntWithAggregatesFilter_not.fromJson(Map<String, dynamic> json) =>
      _$IntWithAggregatesFilter_notFromJson(json);
}

@freezed
class IntWithAggregatesFilter
    with _$IntWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory IntWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$IntWithAggregatesFilterFromJson(json);

  const factory IntWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') IntWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_avg') _i1.PrismaNullable<NestedFloatFilter> prisma__avg,
    @JsonKey(name: '_sum') _i1.PrismaNullable<NestedIntFilter> prisma__sum,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedIntFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedIntFilter> prisma__max,
  }) = _IntWithAggregatesFilter;
}

@freezed
class StringWithAggregatesFilter_not
    with _$StringWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory StringWithAggregatesFilter_not.withString(String value) =
      StringWithAggregatesFilter_not_withString;

  const factory StringWithAggregatesFilter_not.withNestedStringWithAggregatesFilter(
          NestedStringWithAggregatesFilter value) =
      StringWithAggregatesFilter_not_withNestedStringWithAggregatesFilter;

  factory StringWithAggregatesFilter_not.fromJson(Map<String, dynamic> json) =>
      _$StringWithAggregatesFilter_notFromJson(json);
}

@freezed
class StringWithAggregatesFilter
    with _$StringWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory StringWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$StringWithAggregatesFilterFromJson(json);

  const factory StringWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') StringWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedStringFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedStringFilter> prisma__max,
  }) = _StringWithAggregatesFilter;
}

@freezed
class TaskRelationFilter
    with _$TaskRelationFilter
    implements _i1.JsonSerializable {
  factory TaskRelationFilter.fromJson(Map<String, dynamic> json) =>
      _$TaskRelationFilterFromJson(json);

  const factory TaskRelationFilter({
    @JsonKey(name: 'is') _i1.PrismaNullable<TaskWhereInput> dart__is,
    @JsonKey(name: 'isNot') _i1.PrismaNullable<TaskWhereInput> isNot,
  }) = _TaskRelationFilter;
}

@freezed
class ChecklistCountOrderByAggregateInput
    with _$ChecklistCountOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory ChecklistCountOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistCountOrderByAggregateInputFromJson(json);

  const factory ChecklistCountOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'taskId') _i1.PrismaNullable<SortOrder> taskId,
  }) = _ChecklistCountOrderByAggregateInput;
}

@freezed
class ChecklistAvgOrderByAggregateInput
    with _$ChecklistAvgOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory ChecklistAvgOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistAvgOrderByAggregateInputFromJson(json);

  const factory ChecklistAvgOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'taskId') _i1.PrismaNullable<SortOrder> taskId,
  }) = _ChecklistAvgOrderByAggregateInput;
}

@freezed
class ChecklistMaxOrderByAggregateInput
    with _$ChecklistMaxOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory ChecklistMaxOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistMaxOrderByAggregateInputFromJson(json);

  const factory ChecklistMaxOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'taskId') _i1.PrismaNullable<SortOrder> taskId,
  }) = _ChecklistMaxOrderByAggregateInput;
}

@freezed
class ChecklistMinOrderByAggregateInput
    with _$ChecklistMinOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory ChecklistMinOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistMinOrderByAggregateInputFromJson(json);

  const factory ChecklistMinOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'taskId') _i1.PrismaNullable<SortOrder> taskId,
  }) = _ChecklistMinOrderByAggregateInput;
}

@freezed
class ChecklistSumOrderByAggregateInput
    with _$ChecklistSumOrderByAggregateInput
    implements _i1.JsonSerializable {
  factory ChecklistSumOrderByAggregateInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistSumOrderByAggregateInputFromJson(json);

  const factory ChecklistSumOrderByAggregateInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<SortOrder> id,
    @JsonKey(name: 'taskId') _i1.PrismaNullable<SortOrder> taskId,
  }) = _ChecklistSumOrderByAggregateInput;
}

@freezed
class ChecklistCreateNestedManyWithoutTaskInput_create
    with _$ChecklistCreateNestedManyWithoutTaskInput_create
    implements _i1.JsonSerializable {
  const factory ChecklistCreateNestedManyWithoutTaskInput_create.withChecklistCreateWithoutTaskInput(
          ChecklistCreateWithoutTaskInput value) =
      ChecklistCreateNestedManyWithoutTaskInput_create_withChecklistCreateWithoutTaskInput;

  const factory ChecklistCreateNestedManyWithoutTaskInput_create.withChecklistCreateWithoutTaskInputList(
          List<ChecklistCreateWithoutTaskInput> value) =
      ChecklistCreateNestedManyWithoutTaskInput_create_withChecklistCreateWithoutTaskInputList;

  const factory ChecklistCreateNestedManyWithoutTaskInput_create.withChecklistUncheckedCreateWithoutTaskInput(
          ChecklistUncheckedCreateWithoutTaskInput value) =
      ChecklistCreateNestedManyWithoutTaskInput_create_withChecklistUncheckedCreateWithoutTaskInput;

  const factory ChecklistCreateNestedManyWithoutTaskInput_create.withChecklistUncheckedCreateWithoutTaskInputList(
          List<ChecklistUncheckedCreateWithoutTaskInput> value) =
      ChecklistCreateNestedManyWithoutTaskInput_create_withChecklistUncheckedCreateWithoutTaskInputList;

  factory ChecklistCreateNestedManyWithoutTaskInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistCreateNestedManyWithoutTaskInput_createFromJson(json);
}

@freezed
class ChecklistCreateNestedManyWithoutTaskInput_connectOrCreate
    with _$ChecklistCreateNestedManyWithoutTaskInput_connectOrCreate
    implements _i1.JsonSerializable {
  const factory ChecklistCreateNestedManyWithoutTaskInput_connectOrCreate.withChecklistCreateOrConnectWithoutTaskInput(
          ChecklistCreateOrConnectWithoutTaskInput value) =
      ChecklistCreateNestedManyWithoutTaskInput_connectOrCreate_withChecklistCreateOrConnectWithoutTaskInput;

  const factory ChecklistCreateNestedManyWithoutTaskInput_connectOrCreate.withChecklistCreateOrConnectWithoutTaskInputList(
          List<ChecklistCreateOrConnectWithoutTaskInput> value) =
      ChecklistCreateNestedManyWithoutTaskInput_connectOrCreate_withChecklistCreateOrConnectWithoutTaskInputList;

  factory ChecklistCreateNestedManyWithoutTaskInput_connectOrCreate.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistCreateNestedManyWithoutTaskInput_connectOrCreateFromJson(json);
}

@freezed
class ChecklistCreateNestedManyWithoutTaskInput_connect
    with _$ChecklistCreateNestedManyWithoutTaskInput_connect
    implements _i1.JsonSerializable {
  const factory ChecklistCreateNestedManyWithoutTaskInput_connect.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistCreateNestedManyWithoutTaskInput_connect_withChecklistWhereUniqueInput;

  const factory ChecklistCreateNestedManyWithoutTaskInput_connect.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistCreateNestedManyWithoutTaskInput_connect_withChecklistWhereUniqueInputList;

  factory ChecklistCreateNestedManyWithoutTaskInput_connect.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistCreateNestedManyWithoutTaskInput_connectFromJson(json);
}

@freezed
class ChecklistCreateNestedManyWithoutTaskInput
    with _$ChecklistCreateNestedManyWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistCreateNestedManyWithoutTaskInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistCreateNestedManyWithoutTaskInputFromJson(json);

  const factory ChecklistCreateNestedManyWithoutTaskInput({
    @JsonKey(name: 'create')
        ChecklistCreateNestedManyWithoutTaskInput_create? create,
    @JsonKey(name: 'connectOrCreate')
        ChecklistCreateNestedManyWithoutTaskInput_connectOrCreate?
            connectOrCreate,
    @JsonKey(name: 'connect')
        ChecklistCreateNestedManyWithoutTaskInput_connect? connect,
  }) = _ChecklistCreateNestedManyWithoutTaskInput;
}

@freezed
class ChecklistUncheckedCreateNestedManyWithoutTaskInput_create
    with _$ChecklistUncheckedCreateNestedManyWithoutTaskInput_create
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_create.withChecklistCreateWithoutTaskInput(
          ChecklistCreateWithoutTaskInput value) =
      ChecklistUncheckedCreateNestedManyWithoutTaskInput_create_withChecklistCreateWithoutTaskInput;

  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_create.withChecklistCreateWithoutTaskInputList(
          List<ChecklistCreateWithoutTaskInput> value) =
      ChecklistUncheckedCreateNestedManyWithoutTaskInput_create_withChecklistCreateWithoutTaskInputList;

  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_create.withChecklistUncheckedCreateWithoutTaskInput(
          ChecklistUncheckedCreateWithoutTaskInput value) =
      ChecklistUncheckedCreateNestedManyWithoutTaskInput_create_withChecklistUncheckedCreateWithoutTaskInput;

  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_create.withChecklistUncheckedCreateWithoutTaskInputList(
          List<ChecklistUncheckedCreateWithoutTaskInput> value) =
      ChecklistUncheckedCreateNestedManyWithoutTaskInput_create_withChecklistUncheckedCreateWithoutTaskInputList;

  factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedCreateNestedManyWithoutTaskInput_createFromJson(json);
}

@freezed
class ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreate
    with _$ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreate
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreate.withChecklistCreateOrConnectWithoutTaskInput(
          ChecklistCreateOrConnectWithoutTaskInput value) =
      ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreate_withChecklistCreateOrConnectWithoutTaskInput;

  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreate.withChecklistCreateOrConnectWithoutTaskInputList(
          List<ChecklistCreateOrConnectWithoutTaskInput> value) =
      ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreate_withChecklistCreateOrConnectWithoutTaskInputList;

  factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreate.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreateFromJson(
          json);
}

@freezed
class ChecklistUncheckedCreateNestedManyWithoutTaskInput_connect
    with _$ChecklistUncheckedCreateNestedManyWithoutTaskInput_connect
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_connect.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUncheckedCreateNestedManyWithoutTaskInput_connect_withChecklistWhereUniqueInput;

  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_connect.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUncheckedCreateNestedManyWithoutTaskInput_connect_withChecklistWhereUniqueInputList;

  factory ChecklistUncheckedCreateNestedManyWithoutTaskInput_connect.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectFromJson(
          json);
}

@freezed
class ChecklistUncheckedCreateNestedManyWithoutTaskInput
    with _$ChecklistUncheckedCreateNestedManyWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistUncheckedCreateNestedManyWithoutTaskInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedCreateNestedManyWithoutTaskInputFromJson(json);

  const factory ChecklistUncheckedCreateNestedManyWithoutTaskInput({
    @JsonKey(name: 'create')
        ChecklistUncheckedCreateNestedManyWithoutTaskInput_create? create,
    @JsonKey(name: 'connectOrCreate')
        ChecklistUncheckedCreateNestedManyWithoutTaskInput_connectOrCreate?
            connectOrCreate,
    @JsonKey(name: 'connect')
        ChecklistUncheckedCreateNestedManyWithoutTaskInput_connect? connect,
  }) = _ChecklistUncheckedCreateNestedManyWithoutTaskInput;
}

@freezed
class StringFieldUpdateOperationsInput
    with _$StringFieldUpdateOperationsInput
    implements _i1.JsonSerializable {
  factory StringFieldUpdateOperationsInput.fromJson(
          Map<String, dynamic> json) =>
      _$StringFieldUpdateOperationsInputFromJson(json);

  const factory StringFieldUpdateOperationsInput(
          {@JsonKey(name: 'set') _i1.PrismaNullable<String> dart__set}) =
      _StringFieldUpdateOperationsInput;
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_create
    with _$ChecklistUpdateManyWithoutTaskNestedInput_create
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_create.withChecklistCreateWithoutTaskInput(
          ChecklistCreateWithoutTaskInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_create_withChecklistCreateWithoutTaskInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_create.withChecklistCreateWithoutTaskInputList(
          List<ChecklistCreateWithoutTaskInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_create_withChecklistCreateWithoutTaskInputList;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_create.withChecklistUncheckedCreateWithoutTaskInput(
          ChecklistUncheckedCreateWithoutTaskInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_create_withChecklistUncheckedCreateWithoutTaskInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_create.withChecklistUncheckedCreateWithoutTaskInputList(
          List<ChecklistUncheckedCreateWithoutTaskInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_create_withChecklistUncheckedCreateWithoutTaskInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_createFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreate
    with _$ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreate
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreate.withChecklistCreateOrConnectWithoutTaskInput(
          ChecklistCreateOrConnectWithoutTaskInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreate_withChecklistCreateOrConnectWithoutTaskInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreate.withChecklistCreateOrConnectWithoutTaskInputList(
          List<ChecklistCreateOrConnectWithoutTaskInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreate_withChecklistCreateOrConnectWithoutTaskInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreate.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreateFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_upsert
    with _$ChecklistUpdateManyWithoutTaskNestedInput_upsert
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_upsert.withChecklistUpsertWithWhereUniqueWithoutTaskInput(
          ChecklistUpsertWithWhereUniqueWithoutTaskInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_upsert_withChecklistUpsertWithWhereUniqueWithoutTaskInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_upsert.withChecklistUpsertWithWhereUniqueWithoutTaskInputList(
          List<ChecklistUpsertWithWhereUniqueWithoutTaskInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_upsert_withChecklistUpsertWithWhereUniqueWithoutTaskInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_upsert.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_upsertFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_set
    with _$ChecklistUpdateManyWithoutTaskNestedInput_set
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_set.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_set_withChecklistWhereUniqueInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_set.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_set_withChecklistWhereUniqueInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_set.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_setFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_disconnect
    with _$ChecklistUpdateManyWithoutTaskNestedInput_disconnect
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_disconnect.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_disconnect_withChecklistWhereUniqueInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_disconnect.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_disconnect_withChecklistWhereUniqueInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_disconnect.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_disconnectFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_delete
    with _$ChecklistUpdateManyWithoutTaskNestedInput_delete
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_delete.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_delete_withChecklistWhereUniqueInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_delete.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_delete_withChecklistWhereUniqueInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_delete.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_deleteFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_connect
    with _$ChecklistUpdateManyWithoutTaskNestedInput_connect
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_connect.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_connect_withChecklistWhereUniqueInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_connect.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_connect_withChecklistWhereUniqueInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_connect.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_connectFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_update
    with _$ChecklistUpdateManyWithoutTaskNestedInput_update
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_update.withChecklistUpdateWithWhereUniqueWithoutTaskInput(
          ChecklistUpdateWithWhereUniqueWithoutTaskInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_update_withChecklistUpdateWithWhereUniqueWithoutTaskInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_update.withChecklistUpdateWithWhereUniqueWithoutTaskInputList(
          List<ChecklistUpdateWithWhereUniqueWithoutTaskInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_update_withChecklistUpdateWithWhereUniqueWithoutTaskInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_update.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_updateFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_updateMany
    with _$ChecklistUpdateManyWithoutTaskNestedInput_updateMany
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_updateMany.withChecklistUpdateManyWithWhereWithoutTaskInput(
          ChecklistUpdateManyWithWhereWithoutTaskInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_updateMany_withChecklistUpdateManyWithWhereWithoutTaskInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_updateMany.withChecklistUpdateManyWithWhereWithoutTaskInputList(
          List<ChecklistUpdateManyWithWhereWithoutTaskInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_updateMany_withChecklistUpdateManyWithWhereWithoutTaskInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_updateMany.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_updateManyFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput_deleteMany
    with _$ChecklistUpdateManyWithoutTaskNestedInput_deleteMany
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithoutTaskNestedInput_deleteMany.withChecklistScalarWhereInput(
          ChecklistScalarWhereInput value) =
      ChecklistUpdateManyWithoutTaskNestedInput_deleteMany_withChecklistScalarWhereInput;

  const factory ChecklistUpdateManyWithoutTaskNestedInput_deleteMany.withChecklistScalarWhereInputList(
          List<ChecklistScalarWhereInput> value) =
      ChecklistUpdateManyWithoutTaskNestedInput_deleteMany_withChecklistScalarWhereInputList;

  factory ChecklistUpdateManyWithoutTaskNestedInput_deleteMany.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInput_deleteManyFromJson(json);
}

@freezed
class ChecklistUpdateManyWithoutTaskNestedInput
    with _$ChecklistUpdateManyWithoutTaskNestedInput
    implements _i1.JsonSerializable {
  factory ChecklistUpdateManyWithoutTaskNestedInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithoutTaskNestedInputFromJson(json);

  const factory ChecklistUpdateManyWithoutTaskNestedInput({
    @JsonKey(name: 'create')
        ChecklistUpdateManyWithoutTaskNestedInput_create? create,
    @JsonKey(name: 'connectOrCreate')
        ChecklistUpdateManyWithoutTaskNestedInput_connectOrCreate?
            connectOrCreate,
    @JsonKey(name: 'upsert')
        ChecklistUpdateManyWithoutTaskNestedInput_upsert? upsert,
    @JsonKey(name: 'set')
        ChecklistUpdateManyWithoutTaskNestedInput_set? dart__set,
    @JsonKey(name: 'disconnect')
        ChecklistUpdateManyWithoutTaskNestedInput_disconnect? disconnect,
    @JsonKey(name: 'delete')
        ChecklistUpdateManyWithoutTaskNestedInput_delete? delete,
    @JsonKey(name: 'connect')
        ChecklistUpdateManyWithoutTaskNestedInput_connect? connect,
    @JsonKey(name: 'update')
        ChecklistUpdateManyWithoutTaskNestedInput_update? update,
    @JsonKey(name: 'updateMany')
        ChecklistUpdateManyWithoutTaskNestedInput_updateMany? updateMany,
    @JsonKey(name: 'deleteMany')
        ChecklistUpdateManyWithoutTaskNestedInput_deleteMany? deleteMany,
  }) = _ChecklistUpdateManyWithoutTaskNestedInput;
}

@freezed
class IntFieldUpdateOperationsInput
    with _$IntFieldUpdateOperationsInput
    implements _i1.JsonSerializable {
  factory IntFieldUpdateOperationsInput.fromJson(Map<String, dynamic> json) =>
      _$IntFieldUpdateOperationsInputFromJson(json);

  const factory IntFieldUpdateOperationsInput({
    @JsonKey(name: 'set') _i1.PrismaNullable<int> dart__set,
    @JsonKey(name: 'increment') _i1.PrismaNullable<int> increment,
    @JsonKey(name: 'decrement') _i1.PrismaNullable<int> decrement,
    @JsonKey(name: 'multiply') _i1.PrismaNullable<int> multiply,
    @JsonKey(name: 'divide') _i1.PrismaNullable<int> divide,
  }) = _IntFieldUpdateOperationsInput;
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create.withChecklistCreateWithoutTaskInput(
          ChecklistCreateWithoutTaskInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create_withChecklistCreateWithoutTaskInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create.withChecklistCreateWithoutTaskInputList(
          List<ChecklistCreateWithoutTaskInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create_withChecklistCreateWithoutTaskInputList;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create.withChecklistUncheckedCreateWithoutTaskInput(
          ChecklistUncheckedCreateWithoutTaskInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create_withChecklistUncheckedCreateWithoutTaskInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create.withChecklistUncheckedCreateWithoutTaskInputList(
          List<ChecklistUncheckedCreateWithoutTaskInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create_withChecklistUncheckedCreateWithoutTaskInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_createFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreate
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreate
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreate.withChecklistCreateOrConnectWithoutTaskInput(
          ChecklistCreateOrConnectWithoutTaskInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreate_withChecklistCreateOrConnectWithoutTaskInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreate.withChecklistCreateOrConnectWithoutTaskInputList(
          List<ChecklistCreateOrConnectWithoutTaskInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreate_withChecklistCreateOrConnectWithoutTaskInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreate.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreateFromJson(
          json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsert
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsert
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsert.withChecklistUpsertWithWhereUniqueWithoutTaskInput(
          ChecklistUpsertWithWhereUniqueWithoutTaskInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsert_withChecklistUpsertWithWhereUniqueWithoutTaskInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsert.withChecklistUpsertWithWhereUniqueWithoutTaskInputList(
          List<ChecklistUpsertWithWhereUniqueWithoutTaskInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsert_withChecklistUpsertWithWhereUniqueWithoutTaskInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsert.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsertFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_set
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_set
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_set.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_set_withChecklistWhereUniqueInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_set.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_set_withChecklistWhereUniqueInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_set.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_setFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnect
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnect
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnect.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnect_withChecklistWhereUniqueInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnect.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnect_withChecklistWhereUniqueInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnect.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnectFromJson(
          json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_delete
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_delete
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_delete.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_delete_withChecklistWhereUniqueInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_delete.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_delete_withChecklistWhereUniqueInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_delete.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connect
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connect
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connect.withChecklistWhereUniqueInput(
          ChecklistWhereUniqueInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connect_withChecklistWhereUniqueInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connect.withChecklistWhereUniqueInputList(
          List<ChecklistWhereUniqueInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connect_withChecklistWhereUniqueInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connect.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectFromJson(
          json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_update
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_update
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_update.withChecklistUpdateWithWhereUniqueWithoutTaskInput(
          ChecklistUpdateWithWhereUniqueWithoutTaskInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_update_withChecklistUpdateWithWhereUniqueWithoutTaskInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_update.withChecklistUpdateWithWhereUniqueWithoutTaskInputList(
          List<ChecklistUpdateWithWhereUniqueWithoutTaskInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_update_withChecklistUpdateWithWhereUniqueWithoutTaskInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_update.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateMany
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateMany
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateMany.withChecklistUpdateManyWithWhereWithoutTaskInput(
          ChecklistUpdateManyWithWhereWithoutTaskInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateMany_withChecklistUpdateManyWithWhereWithoutTaskInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateMany.withChecklistUpdateManyWithWhereWithoutTaskInputList(
          List<ChecklistUpdateManyWithWhereWithoutTaskInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateMany_withChecklistUpdateManyWithWhereWithoutTaskInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateMany.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateManyFromJson(
          json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteMany
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteMany
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteMany.withChecklistScalarWhereInput(
          ChecklistScalarWhereInput value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteMany_withChecklistScalarWhereInput;

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteMany.withChecklistScalarWhereInputList(
          List<ChecklistScalarWhereInput> value) =
      ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteMany_withChecklistScalarWhereInputList;

  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteMany.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteManyFromJson(
          json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutTaskNestedInput
    with _$ChecklistUncheckedUpdateManyWithoutTaskNestedInput
    implements _i1.JsonSerializable {
  factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutTaskNestedInputFromJson(json);

  const factory ChecklistUncheckedUpdateManyWithoutTaskNestedInput({
    @JsonKey(name: 'create')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_create? create,
    @JsonKey(name: 'connectOrCreate')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connectOrCreate?
            connectOrCreate,
    @JsonKey(name: 'upsert')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_upsert? upsert,
    @JsonKey(name: 'set')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_set? dart__set,
    @JsonKey(name: 'disconnect')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_disconnect?
            disconnect,
    @JsonKey(name: 'delete')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_delete? delete,
    @JsonKey(name: 'connect')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_connect? connect,
    @JsonKey(name: 'update')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_update? update,
    @JsonKey(name: 'updateMany')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_updateMany?
            updateMany,
    @JsonKey(name: 'deleteMany')
        ChecklistUncheckedUpdateManyWithoutTaskNestedInput_deleteMany?
            deleteMany,
  }) = _ChecklistUncheckedUpdateManyWithoutTaskNestedInput;
}

@freezed
class TaskCreateNestedOneWithoutChecklistsInput_create
    with _$TaskCreateNestedOneWithoutChecklistsInput_create
    implements _i1.JsonSerializable {
  const factory TaskCreateNestedOneWithoutChecklistsInput_create.withTaskCreateWithoutChecklistsInput(
          TaskCreateWithoutChecklistsInput value) =
      TaskCreateNestedOneWithoutChecklistsInput_create_withTaskCreateWithoutChecklistsInput;

  const factory TaskCreateNestedOneWithoutChecklistsInput_create.withTaskUncheckedCreateWithoutChecklistsInput(
          TaskUncheckedCreateWithoutChecklistsInput value) =
      TaskCreateNestedOneWithoutChecklistsInput_create_withTaskUncheckedCreateWithoutChecklistsInput;

  factory TaskCreateNestedOneWithoutChecklistsInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$TaskCreateNestedOneWithoutChecklistsInput_createFromJson(json);
}

@freezed
class TaskCreateNestedOneWithoutChecklistsInput
    with _$TaskCreateNestedOneWithoutChecklistsInput
    implements _i1.JsonSerializable {
  factory TaskCreateNestedOneWithoutChecklistsInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskCreateNestedOneWithoutChecklistsInputFromJson(json);

  const factory TaskCreateNestedOneWithoutChecklistsInput({
    @JsonKey(name: 'create')
        TaskCreateNestedOneWithoutChecklistsInput_create? create,
    @JsonKey(name: 'connectOrCreate')
        _i1.PrismaNullable<TaskCreateOrConnectWithoutChecklistsInput>
            connectOrCreate,
    @JsonKey(name: 'connect') _i1.PrismaNullable<TaskWhereUniqueInput> connect,
  }) = _TaskCreateNestedOneWithoutChecklistsInput;
}

@freezed
class TaskUpdateOneRequiredWithoutChecklistsNestedInput_create
    with _$TaskUpdateOneRequiredWithoutChecklistsNestedInput_create
    implements _i1.JsonSerializable {
  const factory TaskUpdateOneRequiredWithoutChecklistsNestedInput_create.withTaskCreateWithoutChecklistsInput(
          TaskCreateWithoutChecklistsInput value) =
      TaskUpdateOneRequiredWithoutChecklistsNestedInput_create_withTaskCreateWithoutChecklistsInput;

  const factory TaskUpdateOneRequiredWithoutChecklistsNestedInput_create.withTaskUncheckedCreateWithoutChecklistsInput(
          TaskUncheckedCreateWithoutChecklistsInput value) =
      TaskUpdateOneRequiredWithoutChecklistsNestedInput_create_withTaskUncheckedCreateWithoutChecklistsInput;

  factory TaskUpdateOneRequiredWithoutChecklistsNestedInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpdateOneRequiredWithoutChecklistsNestedInput_createFromJson(json);
}

@freezed
class TaskUpdateOneRequiredWithoutChecklistsNestedInput_update
    with _$TaskUpdateOneRequiredWithoutChecklistsNestedInput_update
    implements _i1.JsonSerializable {
  const factory TaskUpdateOneRequiredWithoutChecklistsNestedInput_update.withTaskUpdateWithoutChecklistsInput(
          TaskUpdateWithoutChecklistsInput value) =
      TaskUpdateOneRequiredWithoutChecklistsNestedInput_update_withTaskUpdateWithoutChecklistsInput;

  const factory TaskUpdateOneRequiredWithoutChecklistsNestedInput_update.withTaskUncheckedUpdateWithoutChecklistsInput(
          TaskUncheckedUpdateWithoutChecklistsInput value) =
      TaskUpdateOneRequiredWithoutChecklistsNestedInput_update_withTaskUncheckedUpdateWithoutChecklistsInput;

  factory TaskUpdateOneRequiredWithoutChecklistsNestedInput_update.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpdateOneRequiredWithoutChecklistsNestedInput_updateFromJson(json);
}

@freezed
class TaskUpdateOneRequiredWithoutChecklistsNestedInput
    with _$TaskUpdateOneRequiredWithoutChecklistsNestedInput
    implements _i1.JsonSerializable {
  factory TaskUpdateOneRequiredWithoutChecklistsNestedInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpdateOneRequiredWithoutChecklistsNestedInputFromJson(json);

  const factory TaskUpdateOneRequiredWithoutChecklistsNestedInput({
    @JsonKey(name: 'create')
        TaskUpdateOneRequiredWithoutChecklistsNestedInput_create? create,
    @JsonKey(name: 'connectOrCreate')
        _i1.PrismaNullable<TaskCreateOrConnectWithoutChecklistsInput>
            connectOrCreate,
    @JsonKey(name: 'upsert')
        _i1.PrismaNullable<TaskUpsertWithoutChecklistsInput> upsert,
    @JsonKey(name: 'connect') _i1.PrismaNullable<TaskWhereUniqueInput> connect,
    @JsonKey(name: 'update')
        TaskUpdateOneRequiredWithoutChecklistsNestedInput_update? update,
  }) = _TaskUpdateOneRequiredWithoutChecklistsNestedInput;
}

@freezed
class NestedIntFilter_not
    with _$NestedIntFilter_not
    implements _i1.JsonSerializable {
  const factory NestedIntFilter_not.withInt(int value) =
      NestedIntFilter_not_withInt;

  const factory NestedIntFilter_not.withNestedIntFilter(NestedIntFilter value) =
      NestedIntFilter_not_withNestedIntFilter;

  factory NestedIntFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedIntFilter_notFromJson(json);
}

@freezed
class NestedIntFilter with _$NestedIntFilter implements _i1.JsonSerializable {
  factory NestedIntFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedIntFilterFromJson(json);

  const factory NestedIntFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') NestedIntFilter_not? not,
  }) = _NestedIntFilter;
}

@freezed
class NestedStringFilter_not
    with _$NestedStringFilter_not
    implements _i1.JsonSerializable {
  const factory NestedStringFilter_not.withString(String value) =
      NestedStringFilter_not_withString;

  const factory NestedStringFilter_not.withNestedStringFilter(
      NestedStringFilter value) = NestedStringFilter_not_withNestedStringFilter;

  factory NestedStringFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedStringFilter_notFromJson(json);
}

@freezed
class NestedStringFilter
    with _$NestedStringFilter
    implements _i1.JsonSerializable {
  factory NestedStringFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedStringFilterFromJson(json);

  const factory NestedStringFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') NestedStringFilter_not? not,
  }) = _NestedStringFilter;
}

@freezed
class NestedIntWithAggregatesFilter_not
    with _$NestedIntWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory NestedIntWithAggregatesFilter_not.withInt(int value) =
      NestedIntWithAggregatesFilter_not_withInt;

  const factory NestedIntWithAggregatesFilter_not.withNestedIntWithAggregatesFilter(
          NestedIntWithAggregatesFilter value) =
      NestedIntWithAggregatesFilter_not_withNestedIntWithAggregatesFilter;

  factory NestedIntWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$NestedIntWithAggregatesFilter_notFromJson(json);
}

@freezed
class NestedIntWithAggregatesFilter
    with _$NestedIntWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory NestedIntWithAggregatesFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedIntWithAggregatesFilterFromJson(json);

  const factory NestedIntWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<int> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<int>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<int>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<int> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<int> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<int> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<int> gte,
    @JsonKey(name: 'not') NestedIntWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_avg') _i1.PrismaNullable<NestedFloatFilter> prisma__avg,
    @JsonKey(name: '_sum') _i1.PrismaNullable<NestedIntFilter> prisma__sum,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedIntFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedIntFilter> prisma__max,
  }) = _NestedIntWithAggregatesFilter;
}

@freezed
class NestedFloatFilter_not
    with _$NestedFloatFilter_not
    implements _i1.JsonSerializable {
  const factory NestedFloatFilter_not.withFloat(double value) =
      NestedFloatFilter_not_withFloat;

  const factory NestedFloatFilter_not.withNestedFloatFilter(
      NestedFloatFilter value) = NestedFloatFilter_not_withNestedFloatFilter;

  factory NestedFloatFilter_not.fromJson(Map<String, dynamic> json) =>
      _$NestedFloatFilter_notFromJson(json);
}

@freezed
class NestedFloatFilter
    with _$NestedFloatFilter
    implements _i1.JsonSerializable {
  factory NestedFloatFilter.fromJson(Map<String, dynamic> json) =>
      _$NestedFloatFilterFromJson(json);

  const factory NestedFloatFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<double> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<double>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<double>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<double> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<double> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<double> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<double> gte,
    @JsonKey(name: 'not') NestedFloatFilter_not? not,
  }) = _NestedFloatFilter;
}

@freezed
class NestedStringWithAggregatesFilter_not
    with _$NestedStringWithAggregatesFilter_not
    implements _i1.JsonSerializable {
  const factory NestedStringWithAggregatesFilter_not.withString(String value) =
      NestedStringWithAggregatesFilter_not_withString;

  const factory NestedStringWithAggregatesFilter_not.withNestedStringWithAggregatesFilter(
          NestedStringWithAggregatesFilter value) =
      NestedStringWithAggregatesFilter_not_withNestedStringWithAggregatesFilter;

  factory NestedStringWithAggregatesFilter_not.fromJson(
          Map<String, dynamic> json) =>
      _$NestedStringWithAggregatesFilter_notFromJson(json);
}

@freezed
class NestedStringWithAggregatesFilter
    with _$NestedStringWithAggregatesFilter
    implements _i1.JsonSerializable {
  factory NestedStringWithAggregatesFilter.fromJson(
          Map<String, dynamic> json) =>
      _$NestedStringWithAggregatesFilterFromJson(json);

  const factory NestedStringWithAggregatesFilter({
    @JsonKey(name: 'equals') _i1.PrismaNullable<String> equals,
    @JsonKey(name: 'in') _i1.PrismaNullable<List<String>> dart__in,
    @JsonKey(name: 'notIn') _i1.PrismaNullable<List<String>> notIn,
    @JsonKey(name: 'lt') _i1.PrismaNullable<String> lt,
    @JsonKey(name: 'lte') _i1.PrismaNullable<String> lte,
    @JsonKey(name: 'gt') _i1.PrismaNullable<String> gt,
    @JsonKey(name: 'gte') _i1.PrismaNullable<String> gte,
    @JsonKey(name: 'contains') _i1.PrismaNullable<String> contains,
    @JsonKey(name: 'startsWith') _i1.PrismaNullable<String> startsWith,
    @JsonKey(name: 'endsWith') _i1.PrismaNullable<String> endsWith,
    @JsonKey(name: 'not') NestedStringWithAggregatesFilter_not? not,
    @JsonKey(name: '_count') _i1.PrismaNullable<NestedIntFilter> prisma__count,
    @JsonKey(name: '_min') _i1.PrismaNullable<NestedStringFilter> prisma__min,
    @JsonKey(name: '_max') _i1.PrismaNullable<NestedStringFilter> prisma__max,
  }) = _NestedStringWithAggregatesFilter;
}

@freezed
class ChecklistCreateWithoutTaskInput
    with _$ChecklistCreateWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistCreateWithoutTaskInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistCreateWithoutTaskInputFromJson(json);

  const factory ChecklistCreateWithoutTaskInput() =
      _ChecklistCreateWithoutTaskInput;
}

@freezed
class ChecklistUncheckedCreateWithoutTaskInput
    with _$ChecklistUncheckedCreateWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistUncheckedCreateWithoutTaskInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedCreateWithoutTaskInputFromJson(json);

  const factory ChecklistUncheckedCreateWithoutTaskInput(
          {@JsonKey(name: 'id') _i1.PrismaNullable<int> id}) =
      _ChecklistUncheckedCreateWithoutTaskInput;
}

@freezed
class ChecklistCreateOrConnectWithoutTaskInput_create
    with _$ChecklistCreateOrConnectWithoutTaskInput_create
    implements _i1.JsonSerializable {
  const factory ChecklistCreateOrConnectWithoutTaskInput_create.withChecklistCreateWithoutTaskInput(
          ChecklistCreateWithoutTaskInput value) =
      ChecklistCreateOrConnectWithoutTaskInput_create_withChecklistCreateWithoutTaskInput;

  const factory ChecklistCreateOrConnectWithoutTaskInput_create.withChecklistUncheckedCreateWithoutTaskInput(
          ChecklistUncheckedCreateWithoutTaskInput value) =
      ChecklistCreateOrConnectWithoutTaskInput_create_withChecklistUncheckedCreateWithoutTaskInput;

  factory ChecklistCreateOrConnectWithoutTaskInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistCreateOrConnectWithoutTaskInput_createFromJson(json);
}

@freezed
class ChecklistCreateOrConnectWithoutTaskInput
    with _$ChecklistCreateOrConnectWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistCreateOrConnectWithoutTaskInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistCreateOrConnectWithoutTaskInputFromJson(json);

  const factory ChecklistCreateOrConnectWithoutTaskInput({
    @JsonKey(name: 'where') required ChecklistWhereUniqueInput where,
    @JsonKey(name: 'create')
        required ChecklistCreateOrConnectWithoutTaskInput_create create,
  }) = _ChecklistCreateOrConnectWithoutTaskInput;
}

@freezed
class ChecklistUpsertWithWhereUniqueWithoutTaskInput_update
    with _$ChecklistUpsertWithWhereUniqueWithoutTaskInput_update
    implements _i1.JsonSerializable {
  const factory ChecklistUpsertWithWhereUniqueWithoutTaskInput_update.withChecklistUpdateWithoutTaskInput(
          ChecklistUpdateWithoutTaskInput value) =
      ChecklistUpsertWithWhereUniqueWithoutTaskInput_update_withChecklistUpdateWithoutTaskInput;

  const factory ChecklistUpsertWithWhereUniqueWithoutTaskInput_update.withChecklistUncheckedUpdateWithoutTaskInput(
          ChecklistUncheckedUpdateWithoutTaskInput value) =
      ChecklistUpsertWithWhereUniqueWithoutTaskInput_update_withChecklistUncheckedUpdateWithoutTaskInput;

  factory ChecklistUpsertWithWhereUniqueWithoutTaskInput_update.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpsertWithWhereUniqueWithoutTaskInput_updateFromJson(json);
}

@freezed
class ChecklistUpsertWithWhereUniqueWithoutTaskInput_create
    with _$ChecklistUpsertWithWhereUniqueWithoutTaskInput_create
    implements _i1.JsonSerializable {
  const factory ChecklistUpsertWithWhereUniqueWithoutTaskInput_create.withChecklistCreateWithoutTaskInput(
          ChecklistCreateWithoutTaskInput value) =
      ChecklistUpsertWithWhereUniqueWithoutTaskInput_create_withChecklistCreateWithoutTaskInput;

  const factory ChecklistUpsertWithWhereUniqueWithoutTaskInput_create.withChecklistUncheckedCreateWithoutTaskInput(
          ChecklistUncheckedCreateWithoutTaskInput value) =
      ChecklistUpsertWithWhereUniqueWithoutTaskInput_create_withChecklistUncheckedCreateWithoutTaskInput;

  factory ChecklistUpsertWithWhereUniqueWithoutTaskInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpsertWithWhereUniqueWithoutTaskInput_createFromJson(json);
}

@freezed
class ChecklistUpsertWithWhereUniqueWithoutTaskInput
    with _$ChecklistUpsertWithWhereUniqueWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistUpsertWithWhereUniqueWithoutTaskInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpsertWithWhereUniqueWithoutTaskInputFromJson(json);

  const factory ChecklistUpsertWithWhereUniqueWithoutTaskInput({
    @JsonKey(name: 'where') required ChecklistWhereUniqueInput where,
    @JsonKey(name: 'update')
        required ChecklistUpsertWithWhereUniqueWithoutTaskInput_update update,
    @JsonKey(name: 'create')
        required ChecklistUpsertWithWhereUniqueWithoutTaskInput_create create,
  }) = _ChecklistUpsertWithWhereUniqueWithoutTaskInput;
}

@freezed
class ChecklistUpdateWithWhereUniqueWithoutTaskInput_data
    with _$ChecklistUpdateWithWhereUniqueWithoutTaskInput_data
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateWithWhereUniqueWithoutTaskInput_data.withChecklistUpdateWithoutTaskInput(
          ChecklistUpdateWithoutTaskInput value) =
      ChecklistUpdateWithWhereUniqueWithoutTaskInput_data_withChecklistUpdateWithoutTaskInput;

  const factory ChecklistUpdateWithWhereUniqueWithoutTaskInput_data.withChecklistUncheckedUpdateWithoutTaskInput(
          ChecklistUncheckedUpdateWithoutTaskInput value) =
      ChecklistUpdateWithWhereUniqueWithoutTaskInput_data_withChecklistUncheckedUpdateWithoutTaskInput;

  factory ChecklistUpdateWithWhereUniqueWithoutTaskInput_data.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateWithWhereUniqueWithoutTaskInput_dataFromJson(json);
}

@freezed
class ChecklistUpdateWithWhereUniqueWithoutTaskInput
    with _$ChecklistUpdateWithWhereUniqueWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistUpdateWithWhereUniqueWithoutTaskInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateWithWhereUniqueWithoutTaskInputFromJson(json);

  const factory ChecklistUpdateWithWhereUniqueWithoutTaskInput({
    @JsonKey(name: 'where') required ChecklistWhereUniqueInput where,
    @JsonKey(name: 'data')
        required ChecklistUpdateWithWhereUniqueWithoutTaskInput_data data,
  }) = _ChecklistUpdateWithWhereUniqueWithoutTaskInput;
}

@freezed
class ChecklistUpdateManyWithWhereWithoutTaskInput_data
    with _$ChecklistUpdateManyWithWhereWithoutTaskInput_data
    implements _i1.JsonSerializable {
  const factory ChecklistUpdateManyWithWhereWithoutTaskInput_data.withChecklistUpdateManyMutationInput(
          ChecklistUpdateManyMutationInput value) =
      ChecklistUpdateManyWithWhereWithoutTaskInput_data_withChecklistUpdateManyMutationInput;

  const factory ChecklistUpdateManyWithWhereWithoutTaskInput_data.withChecklistUncheckedUpdateManyWithoutChecklistsInput(
          ChecklistUncheckedUpdateManyWithoutChecklistsInput value) =
      ChecklistUpdateManyWithWhereWithoutTaskInput_data_withChecklistUncheckedUpdateManyWithoutChecklistsInput;

  factory ChecklistUpdateManyWithWhereWithoutTaskInput_data.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithWhereWithoutTaskInput_dataFromJson(json);
}

@freezed
class ChecklistUpdateManyWithWhereWithoutTaskInput
    with _$ChecklistUpdateManyWithWhereWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistUpdateManyWithWhereWithoutTaskInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUpdateManyWithWhereWithoutTaskInputFromJson(json);

  const factory ChecklistUpdateManyWithWhereWithoutTaskInput({
    @JsonKey(name: 'where') required ChecklistScalarWhereInput where,
    @JsonKey(name: 'data')
        required ChecklistUpdateManyWithWhereWithoutTaskInput_data data,
  }) = _ChecklistUpdateManyWithWhereWithoutTaskInput;
}

@freezed
class ChecklistScalarWhereInput_AND
    with _$ChecklistScalarWhereInput_AND
    implements _i1.JsonSerializable {
  const factory ChecklistScalarWhereInput_AND.withChecklistScalarWhereInput(
          ChecklistScalarWhereInput value) =
      ChecklistScalarWhereInput_AND_withChecklistScalarWhereInput;

  const factory ChecklistScalarWhereInput_AND.withChecklistScalarWhereInputList(
          List<ChecklistScalarWhereInput> value) =
      ChecklistScalarWhereInput_AND_withChecklistScalarWhereInputList;

  factory ChecklistScalarWhereInput_AND.fromJson(Map<String, dynamic> json) =>
      _$ChecklistScalarWhereInput_ANDFromJson(json);
}

@freezed
class ChecklistScalarWhereInput_NOT
    with _$ChecklistScalarWhereInput_NOT
    implements _i1.JsonSerializable {
  const factory ChecklistScalarWhereInput_NOT.withChecklistScalarWhereInput(
          ChecklistScalarWhereInput value) =
      ChecklistScalarWhereInput_NOT_withChecklistScalarWhereInput;

  const factory ChecklistScalarWhereInput_NOT.withChecklistScalarWhereInputList(
          List<ChecklistScalarWhereInput> value) =
      ChecklistScalarWhereInput_NOT_withChecklistScalarWhereInputList;

  factory ChecklistScalarWhereInput_NOT.fromJson(Map<String, dynamic> json) =>
      _$ChecklistScalarWhereInput_NOTFromJson(json);
}

@freezed
class ChecklistScalarWhereInput_id
    with _$ChecklistScalarWhereInput_id
    implements _i1.JsonSerializable {
  const factory ChecklistScalarWhereInput_id.withIntFilter(IntFilter value) =
      ChecklistScalarWhereInput_id_withIntFilter;

  const factory ChecklistScalarWhereInput_id.withInt(int value) =
      ChecklistScalarWhereInput_id_withInt;

  factory ChecklistScalarWhereInput_id.fromJson(Map<String, dynamic> json) =>
      _$ChecklistScalarWhereInput_idFromJson(json);
}

@freezed
class ChecklistScalarWhereInput_taskId
    with _$ChecklistScalarWhereInput_taskId
    implements _i1.JsonSerializable {
  const factory ChecklistScalarWhereInput_taskId.withIntFilter(
      IntFilter value) = ChecklistScalarWhereInput_taskId_withIntFilter;

  const factory ChecklistScalarWhereInput_taskId.withInt(int value) =
      ChecklistScalarWhereInput_taskId_withInt;

  factory ChecklistScalarWhereInput_taskId.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistScalarWhereInput_taskIdFromJson(json);
}

@freezed
class ChecklistScalarWhereInput
    with _$ChecklistScalarWhereInput
    implements _i1.JsonSerializable {
  factory ChecklistScalarWhereInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistScalarWhereInputFromJson(json);

  const factory ChecklistScalarWhereInput({
    @JsonKey(name: 'AND') ChecklistScalarWhereInput_AND? AND,
    @JsonKey(name: 'OR') _i1.PrismaNullable<List<ChecklistScalarWhereInput>> OR,
    @JsonKey(name: 'NOT') ChecklistScalarWhereInput_NOT? NOT,
    @JsonKey(name: 'id') ChecklistScalarWhereInput_id? id,
    @JsonKey(name: 'taskId') ChecklistScalarWhereInput_taskId? taskId,
  }) = _ChecklistScalarWhereInput;
}

@freezed
class TaskCreateWithoutChecklistsInput
    with _$TaskCreateWithoutChecklistsInput
    implements _i1.JsonSerializable {
  factory TaskCreateWithoutChecklistsInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskCreateWithoutChecklistsInputFromJson(json);

  const factory TaskCreateWithoutChecklistsInput(
          {@JsonKey(name: 'name') required String name}) =
      _TaskCreateWithoutChecklistsInput;
}

@freezed
class TaskUncheckedCreateWithoutChecklistsInput
    with _$TaskUncheckedCreateWithoutChecklistsInput
    implements _i1.JsonSerializable {
  factory TaskUncheckedCreateWithoutChecklistsInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUncheckedCreateWithoutChecklistsInputFromJson(json);

  const factory TaskUncheckedCreateWithoutChecklistsInput({
    @JsonKey(name: 'id') _i1.PrismaNullable<int> id,
    @JsonKey(name: 'name') required String name,
  }) = _TaskUncheckedCreateWithoutChecklistsInput;
}

@freezed
class TaskCreateOrConnectWithoutChecklistsInput_create
    with _$TaskCreateOrConnectWithoutChecklistsInput_create
    implements _i1.JsonSerializable {
  const factory TaskCreateOrConnectWithoutChecklistsInput_create.withTaskCreateWithoutChecklistsInput(
          TaskCreateWithoutChecklistsInput value) =
      TaskCreateOrConnectWithoutChecklistsInput_create_withTaskCreateWithoutChecklistsInput;

  const factory TaskCreateOrConnectWithoutChecklistsInput_create.withTaskUncheckedCreateWithoutChecklistsInput(
          TaskUncheckedCreateWithoutChecklistsInput value) =
      TaskCreateOrConnectWithoutChecklistsInput_create_withTaskUncheckedCreateWithoutChecklistsInput;

  factory TaskCreateOrConnectWithoutChecklistsInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$TaskCreateOrConnectWithoutChecklistsInput_createFromJson(json);
}

@freezed
class TaskCreateOrConnectWithoutChecklistsInput
    with _$TaskCreateOrConnectWithoutChecklistsInput
    implements _i1.JsonSerializable {
  factory TaskCreateOrConnectWithoutChecklistsInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskCreateOrConnectWithoutChecklistsInputFromJson(json);

  const factory TaskCreateOrConnectWithoutChecklistsInput({
    @JsonKey(name: 'where') required TaskWhereUniqueInput where,
    @JsonKey(name: 'create')
        required TaskCreateOrConnectWithoutChecklistsInput_create create,
  }) = _TaskCreateOrConnectWithoutChecklistsInput;
}

@freezed
class TaskUpsertWithoutChecklistsInput_update
    with _$TaskUpsertWithoutChecklistsInput_update
    implements _i1.JsonSerializable {
  const factory TaskUpsertWithoutChecklistsInput_update.withTaskUpdateWithoutChecklistsInput(
          TaskUpdateWithoutChecklistsInput value) =
      TaskUpsertWithoutChecklistsInput_update_withTaskUpdateWithoutChecklistsInput;

  const factory TaskUpsertWithoutChecklistsInput_update.withTaskUncheckedUpdateWithoutChecklistsInput(
          TaskUncheckedUpdateWithoutChecklistsInput value) =
      TaskUpsertWithoutChecklistsInput_update_withTaskUncheckedUpdateWithoutChecklistsInput;

  factory TaskUpsertWithoutChecklistsInput_update.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpsertWithoutChecklistsInput_updateFromJson(json);
}

@freezed
class TaskUpsertWithoutChecklistsInput_create
    with _$TaskUpsertWithoutChecklistsInput_create
    implements _i1.JsonSerializable {
  const factory TaskUpsertWithoutChecklistsInput_create.withTaskCreateWithoutChecklistsInput(
          TaskCreateWithoutChecklistsInput value) =
      TaskUpsertWithoutChecklistsInput_create_withTaskCreateWithoutChecklistsInput;

  const factory TaskUpsertWithoutChecklistsInput_create.withTaskUncheckedCreateWithoutChecklistsInput(
          TaskUncheckedCreateWithoutChecklistsInput value) =
      TaskUpsertWithoutChecklistsInput_create_withTaskUncheckedCreateWithoutChecklistsInput;

  factory TaskUpsertWithoutChecklistsInput_create.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpsertWithoutChecklistsInput_createFromJson(json);
}

@freezed
class TaskUpsertWithoutChecklistsInput
    with _$TaskUpsertWithoutChecklistsInput
    implements _i1.JsonSerializable {
  factory TaskUpsertWithoutChecklistsInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpsertWithoutChecklistsInputFromJson(json);

  const factory TaskUpsertWithoutChecklistsInput({
    @JsonKey(name: 'update')
        required TaskUpsertWithoutChecklistsInput_update update,
    @JsonKey(name: 'create')
        required TaskUpsertWithoutChecklistsInput_create create,
  }) = _TaskUpsertWithoutChecklistsInput;
}

@freezed
class TaskUpdateWithoutChecklistsInput_name
    with _$TaskUpdateWithoutChecklistsInput_name
    implements _i1.JsonSerializable {
  const factory TaskUpdateWithoutChecklistsInput_name.withString(String value) =
      TaskUpdateWithoutChecklistsInput_name_withString;

  const factory TaskUpdateWithoutChecklistsInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      TaskUpdateWithoutChecklistsInput_name_withStringFieldUpdateOperationsInput;

  factory TaskUpdateWithoutChecklistsInput_name.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpdateWithoutChecklistsInput_nameFromJson(json);
}

@freezed
class TaskUpdateWithoutChecklistsInput
    with _$TaskUpdateWithoutChecklistsInput
    implements _i1.JsonSerializable {
  factory TaskUpdateWithoutChecklistsInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUpdateWithoutChecklistsInputFromJson(json);

  const factory TaskUpdateWithoutChecklistsInput(
          {@JsonKey(name: 'name')
              TaskUpdateWithoutChecklistsInput_name? name}) =
      _TaskUpdateWithoutChecklistsInput;
}

@freezed
class TaskUncheckedUpdateWithoutChecklistsInput_id
    with _$TaskUncheckedUpdateWithoutChecklistsInput_id
    implements _i1.JsonSerializable {
  const factory TaskUncheckedUpdateWithoutChecklistsInput_id.withInt(
      int value) = TaskUncheckedUpdateWithoutChecklistsInput_id_withInt;

  const factory TaskUncheckedUpdateWithoutChecklistsInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      TaskUncheckedUpdateWithoutChecklistsInput_id_withIntFieldUpdateOperationsInput;

  factory TaskUncheckedUpdateWithoutChecklistsInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateWithoutChecklistsInput_idFromJson(json);
}

@freezed
class TaskUncheckedUpdateWithoutChecklistsInput_name
    with _$TaskUncheckedUpdateWithoutChecklistsInput_name
    implements _i1.JsonSerializable {
  const factory TaskUncheckedUpdateWithoutChecklistsInput_name.withString(
      String value) = TaskUncheckedUpdateWithoutChecklistsInput_name_withString;

  const factory TaskUncheckedUpdateWithoutChecklistsInput_name.withStringFieldUpdateOperationsInput(
          StringFieldUpdateOperationsInput value) =
      TaskUncheckedUpdateWithoutChecklistsInput_name_withStringFieldUpdateOperationsInput;

  factory TaskUncheckedUpdateWithoutChecklistsInput_name.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateWithoutChecklistsInput_nameFromJson(json);
}

@freezed
class TaskUncheckedUpdateWithoutChecklistsInput
    with _$TaskUncheckedUpdateWithoutChecklistsInput
    implements _i1.JsonSerializable {
  factory TaskUncheckedUpdateWithoutChecklistsInput.fromJson(
          Map<String, dynamic> json) =>
      _$TaskUncheckedUpdateWithoutChecklistsInputFromJson(json);

  const factory TaskUncheckedUpdateWithoutChecklistsInput({
    @JsonKey(name: 'id') TaskUncheckedUpdateWithoutChecklistsInput_id? id,
    @JsonKey(name: 'name') TaskUncheckedUpdateWithoutChecklistsInput_name? name,
  }) = _TaskUncheckedUpdateWithoutChecklistsInput;
}

@freezed
class ChecklistUpdateWithoutTaskInput
    with _$ChecklistUpdateWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistUpdateWithoutTaskInput.fromJson(Map<String, dynamic> json) =>
      _$ChecklistUpdateWithoutTaskInputFromJson(json);

  const factory ChecklistUpdateWithoutTaskInput() =
      _ChecklistUpdateWithoutTaskInput;
}

@freezed
class ChecklistUncheckedUpdateWithoutTaskInput_id
    with _$ChecklistUncheckedUpdateWithoutTaskInput_id
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateWithoutTaskInput_id.withInt(int value) =
      ChecklistUncheckedUpdateWithoutTaskInput_id_withInt;

  const factory ChecklistUncheckedUpdateWithoutTaskInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      ChecklistUncheckedUpdateWithoutTaskInput_id_withIntFieldUpdateOperationsInput;

  factory ChecklistUncheckedUpdateWithoutTaskInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateWithoutTaskInput_idFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateWithoutTaskInput
    with _$ChecklistUncheckedUpdateWithoutTaskInput
    implements _i1.JsonSerializable {
  factory ChecklistUncheckedUpdateWithoutTaskInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateWithoutTaskInputFromJson(json);

  const factory ChecklistUncheckedUpdateWithoutTaskInput(
          {@JsonKey(name: 'id')
              ChecklistUncheckedUpdateWithoutTaskInput_id? id}) =
      _ChecklistUncheckedUpdateWithoutTaskInput;
}

@freezed
class ChecklistUncheckedUpdateManyWithoutChecklistsInput_id
    with _$ChecklistUncheckedUpdateManyWithoutChecklistsInput_id
    implements _i1.JsonSerializable {
  const factory ChecklistUncheckedUpdateManyWithoutChecklistsInput_id.withInt(
          int value) =
      ChecklistUncheckedUpdateManyWithoutChecklistsInput_id_withInt;

  const factory ChecklistUncheckedUpdateManyWithoutChecklistsInput_id.withIntFieldUpdateOperationsInput(
          IntFieldUpdateOperationsInput value) =
      ChecklistUncheckedUpdateManyWithoutChecklistsInput_id_withIntFieldUpdateOperationsInput;

  factory ChecklistUncheckedUpdateManyWithoutChecklistsInput_id.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutChecklistsInput_idFromJson(json);
}

@freezed
class ChecklistUncheckedUpdateManyWithoutChecklistsInput
    with _$ChecklistUncheckedUpdateManyWithoutChecklistsInput
    implements _i1.JsonSerializable {
  factory ChecklistUncheckedUpdateManyWithoutChecklistsInput.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistUncheckedUpdateManyWithoutChecklistsInputFromJson(json);

  const factory ChecklistUncheckedUpdateManyWithoutChecklistsInput(
          {@JsonKey(name: 'id')
              ChecklistUncheckedUpdateManyWithoutChecklistsInput_id? id}) =
      _ChecklistUncheckedUpdateManyWithoutChecklistsInput;
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateTask implements _i1.JsonSerializable {
  const AggregateTask({
    this.prisma__count,
    this.prisma__avg,
    this.prisma__sum,
    this.prisma__min,
    this.prisma__max,
  });

  factory AggregateTask.fromJson(Map<String, dynamic> json) =>
      _$AggregateTaskFromJson(json);

  @JsonKey(name: '_count')
  final _i1.PrismaNullable<TaskCountAggregateOutputType> prisma__count;

  @JsonKey(name: '_avg')
  final _i1.PrismaNullable<TaskAvgAggregateOutputType> prisma__avg;

  @JsonKey(name: '_sum')
  final _i1.PrismaNullable<TaskSumAggregateOutputType> prisma__sum;

  @JsonKey(name: '_min')
  final _i1.PrismaNullable<TaskMinAggregateOutputType> prisma__min;

  @JsonKey(name: '_max')
  final _i1.PrismaNullable<TaskMaxAggregateOutputType> prisma__max;

  @override
  Map<String, dynamic> toJson() => _$AggregateTaskToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class TaskGroupByOutputType implements _i1.JsonSerializable {
  const TaskGroupByOutputType({
    required this.id,
    required this.name,
    this.prisma__count,
    this.prisma__avg,
    this.prisma__sum,
    this.prisma__min,
    this.prisma__max,
  });

  factory TaskGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$TaskGroupByOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'name')
  final String name;

  @JsonKey(name: '_count')
  final _i1.PrismaNullable<TaskCountAggregateOutputType> prisma__count;

  @JsonKey(name: '_avg')
  final _i1.PrismaNullable<TaskAvgAggregateOutputType> prisma__avg;

  @JsonKey(name: '_sum')
  final _i1.PrismaNullable<TaskSumAggregateOutputType> prisma__sum;

  @JsonKey(name: '_min')
  final _i1.PrismaNullable<TaskMinAggregateOutputType> prisma__min;

  @JsonKey(name: '_max')
  final _i1.PrismaNullable<TaskMaxAggregateOutputType> prisma__max;

  @override
  Map<String, dynamic> toJson() => _$TaskGroupByOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateChecklist implements _i1.JsonSerializable {
  const AggregateChecklist({
    this.prisma__count,
    this.prisma__avg,
    this.prisma__sum,
    this.prisma__min,
    this.prisma__max,
  });

  factory AggregateChecklist.fromJson(Map<String, dynamic> json) =>
      _$AggregateChecklistFromJson(json);

  @JsonKey(name: '_count')
  final _i1.PrismaNullable<ChecklistCountAggregateOutputType> prisma__count;

  @JsonKey(name: '_avg')
  final _i1.PrismaNullable<ChecklistAvgAggregateOutputType> prisma__avg;

  @JsonKey(name: '_sum')
  final _i1.PrismaNullable<ChecklistSumAggregateOutputType> prisma__sum;

  @JsonKey(name: '_min')
  final _i1.PrismaNullable<ChecklistMinAggregateOutputType> prisma__min;

  @JsonKey(name: '_max')
  final _i1.PrismaNullable<ChecklistMaxAggregateOutputType> prisma__max;

  @override
  Map<String, dynamic> toJson() => _$AggregateChecklistToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ChecklistGroupByOutputType implements _i1.JsonSerializable {
  const ChecklistGroupByOutputType({
    required this.id,
    required this.taskId,
    this.prisma__count,
    this.prisma__avg,
    this.prisma__sum,
    this.prisma__min,
    this.prisma__max,
  });

  factory ChecklistGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$ChecklistGroupByOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'taskId')
  final int taskId;

  @JsonKey(name: '_count')
  final _i1.PrismaNullable<ChecklistCountAggregateOutputType> prisma__count;

  @JsonKey(name: '_avg')
  final _i1.PrismaNullable<ChecklistAvgAggregateOutputType> prisma__avg;

  @JsonKey(name: '_sum')
  final _i1.PrismaNullable<ChecklistSumAggregateOutputType> prisma__sum;

  @JsonKey(name: '_min')
  final _i1.PrismaNullable<ChecklistMinAggregateOutputType> prisma__min;

  @JsonKey(name: '_max')
  final _i1.PrismaNullable<ChecklistMaxAggregateOutputType> prisma__max;

  @override
  Map<String, dynamic> toJson() => _$ChecklistGroupByOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AffectedRowsOutput implements _i1.JsonSerializable {
  const AffectedRowsOutput({required this.count});

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  @JsonKey(name: 'count')
  final int count;

  @override
  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class TaskCountOutputType implements _i1.JsonSerializable {
  const TaskCountOutputType({required this.checklists});

  factory TaskCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$TaskCountOutputTypeFromJson(json);

  @JsonKey(name: 'checklists')
  final int checklists;

  @override
  Map<String, dynamic> toJson() => _$TaskCountOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class TaskCountAggregateOutputType implements _i1.JsonSerializable {
  const TaskCountAggregateOutputType({
    required this.id,
    required this.name,
    required this.prisma__all,
  });

  factory TaskCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$TaskCountAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'name')
  final int name;

  @JsonKey(name: '_all')
  final int prisma__all;

  @override
  Map<String, dynamic> toJson() => _$TaskCountAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class TaskAvgAggregateOutputType implements _i1.JsonSerializable {
  const TaskAvgAggregateOutputType({this.id});

  factory TaskAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$TaskAvgAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<double> id;

  @override
  Map<String, dynamic> toJson() => _$TaskAvgAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class TaskSumAggregateOutputType implements _i1.JsonSerializable {
  const TaskSumAggregateOutputType({this.id});

  factory TaskSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$TaskSumAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() => _$TaskSumAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class TaskMinAggregateOutputType implements _i1.JsonSerializable {
  const TaskMinAggregateOutputType({
    this.id,
    this.name,
  });

  factory TaskMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$TaskMinAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @JsonKey(name: 'name')
  final _i1.PrismaNullable<String> name;

  @override
  Map<String, dynamic> toJson() => _$TaskMinAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class TaskMaxAggregateOutputType implements _i1.JsonSerializable {
  const TaskMaxAggregateOutputType({
    this.id,
    this.name,
  });

  factory TaskMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$TaskMaxAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @JsonKey(name: 'name')
  final _i1.PrismaNullable<String> name;

  @override
  Map<String, dynamic> toJson() => _$TaskMaxAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ChecklistCountAggregateOutputType implements _i1.JsonSerializable {
  const ChecklistCountAggregateOutputType({
    required this.id,
    required this.taskId,
    required this.prisma__all,
  });

  factory ChecklistCountAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$ChecklistCountAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'taskId')
  final int taskId;

  @JsonKey(name: '_all')
  final int prisma__all;

  @override
  Map<String, dynamic> toJson() =>
      _$ChecklistCountAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ChecklistAvgAggregateOutputType implements _i1.JsonSerializable {
  const ChecklistAvgAggregateOutputType({
    this.id,
    this.taskId,
  });

  factory ChecklistAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ChecklistAvgAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<double> id;

  @JsonKey(name: 'taskId')
  final _i1.PrismaNullable<double> taskId;

  @override
  Map<String, dynamic> toJson() =>
      _$ChecklistAvgAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ChecklistSumAggregateOutputType implements _i1.JsonSerializable {
  const ChecklistSumAggregateOutputType({
    this.id,
    this.taskId,
  });

  factory ChecklistSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ChecklistSumAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @JsonKey(name: 'taskId')
  final _i1.PrismaNullable<int> taskId;

  @override
  Map<String, dynamic> toJson() =>
      _$ChecklistSumAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ChecklistMinAggregateOutputType implements _i1.JsonSerializable {
  const ChecklistMinAggregateOutputType({
    this.id,
    this.taskId,
  });

  factory ChecklistMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ChecklistMinAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @JsonKey(name: 'taskId')
  final _i1.PrismaNullable<int> taskId;

  @override
  Map<String, dynamic> toJson() =>
      _$ChecklistMinAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ChecklistMaxAggregateOutputType implements _i1.JsonSerializable {
  const ChecklistMaxAggregateOutputType({
    this.id,
    this.taskId,
  });

  factory ChecklistMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ChecklistMaxAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
  final _i1.PrismaNullable<int> id;

  @JsonKey(name: 'taskId')
  final _i1.PrismaNullable<int> taskId;

  @override
  Map<String, dynamic> toJson() =>
      _$ChecklistMaxAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Task implements _i1.JsonSerializable {
  const Task({
    required this.id,
    required this.name,
  });

  factory Task.fromJson(Map<String, dynamic> json) => _$TaskFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'name')
  final String name;

  @override
  Map<String, dynamic> toJson() => _$TaskToJson(this);
}

@JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Checklist implements _i1.JsonSerializable {
  const Checklist({
    required this.id,
    required this.taskId,
  });

  factory Checklist.fromJson(Map<String, dynamic> json) =>
      _$ChecklistFromJson(json);

  @JsonKey(name: 'id')
  final int id;

  @JsonKey(name: 'taskId')
  final int taskId;

  @override
  Map<String, dynamic> toJson() => _$ChecklistToJson(this);
}

@freezed
class FindFirstTaskOrderBy
    with _$FindFirstTaskOrderBy
    implements _i1.JsonSerializable {
  const factory FindFirstTaskOrderBy.withTaskOrderByWithRelationInputList(
          List<TaskOrderByWithRelationInput> value) =
      _FindFirstTaskOrderByWithTaskOrderByWithRelationInputList;

  const factory FindFirstTaskOrderBy.withTaskOrderByWithRelationInput(
          TaskOrderByWithRelationInput value) =
      _FindFirstTaskOrderByWithTaskOrderByWithRelationInput;

  factory FindFirstTaskOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindFirstTaskOrderByFromJson(json);
}

@freezed
class FindFirstTaskOrThrowOrderBy
    with _$FindFirstTaskOrThrowOrderBy
    implements _i1.JsonSerializable {
  const factory FindFirstTaskOrThrowOrderBy.withTaskOrderByWithRelationInputList(
          List<TaskOrderByWithRelationInput> value) =
      _FindFirstTaskOrThrowOrderByWithTaskOrderByWithRelationInputList;

  const factory FindFirstTaskOrThrowOrderBy.withTaskOrderByWithRelationInput(
          TaskOrderByWithRelationInput value) =
      _FindFirstTaskOrThrowOrderByWithTaskOrderByWithRelationInput;

  factory FindFirstTaskOrThrowOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindFirstTaskOrThrowOrderByFromJson(json);
}

@freezed
class FindManyTaskOrderBy
    with _$FindManyTaskOrderBy
    implements _i1.JsonSerializable {
  const factory FindManyTaskOrderBy.withTaskOrderByWithRelationInputList(
          List<TaskOrderByWithRelationInput> value) =
      _FindManyTaskOrderByWithTaskOrderByWithRelationInputList;

  const factory FindManyTaskOrderBy.withTaskOrderByWithRelationInput(
          TaskOrderByWithRelationInput value) =
      _FindManyTaskOrderByWithTaskOrderByWithRelationInput;

  factory FindManyTaskOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindManyTaskOrderByFromJson(json);
}

@freezed
class CreateOneTaskData
    with _$CreateOneTaskData
    implements _i1.JsonSerializable {
  const factory CreateOneTaskData.withTaskCreateInput(TaskCreateInput value) =
      _CreateOneTaskDataWithTaskCreateInput;

  const factory CreateOneTaskData.withTaskUncheckedCreateInput(
          TaskUncheckedCreateInput value) =
      _CreateOneTaskDataWithTaskUncheckedCreateInput;

  factory CreateOneTaskData.fromJson(Map<String, dynamic> json) =>
      _$CreateOneTaskDataFromJson(json);
}

@freezed
class UpdateOneTaskData
    with _$UpdateOneTaskData
    implements _i1.JsonSerializable {
  const factory UpdateOneTaskData.withTaskUpdateInput(TaskUpdateInput value) =
      _UpdateOneTaskDataWithTaskUpdateInput;

  const factory UpdateOneTaskData.withTaskUncheckedUpdateInput(
          TaskUncheckedUpdateInput value) =
      _UpdateOneTaskDataWithTaskUncheckedUpdateInput;

  factory UpdateOneTaskData.fromJson(Map<String, dynamic> json) =>
      _$UpdateOneTaskDataFromJson(json);
}

@freezed
class UpdateManyTaskData
    with _$UpdateManyTaskData
    implements _i1.JsonSerializable {
  const factory UpdateManyTaskData.withTaskUpdateManyMutationInput(
          TaskUpdateManyMutationInput value) =
      _UpdateManyTaskDataWithTaskUpdateManyMutationInput;

  const factory UpdateManyTaskData.withTaskUncheckedUpdateManyInput(
          TaskUncheckedUpdateManyInput value) =
      _UpdateManyTaskDataWithTaskUncheckedUpdateManyInput;

  factory UpdateManyTaskData.fromJson(Map<String, dynamic> json) =>
      _$UpdateManyTaskDataFromJson(json);
}

@freezed
class UpsertOneTaskCreate
    with _$UpsertOneTaskCreate
    implements _i1.JsonSerializable {
  const factory UpsertOneTaskCreate.withTaskCreateInput(TaskCreateInput value) =
      _UpsertOneTaskCreateWithTaskCreateInput;

  const factory UpsertOneTaskCreate.withTaskUncheckedCreateInput(
          TaskUncheckedCreateInput value) =
      _UpsertOneTaskCreateWithTaskUncheckedCreateInput;

  factory UpsertOneTaskCreate.fromJson(Map<String, dynamic> json) =>
      _$UpsertOneTaskCreateFromJson(json);
}

@freezed
class UpsertOneTaskUpdate
    with _$UpsertOneTaskUpdate
    implements _i1.JsonSerializable {
  const factory UpsertOneTaskUpdate.withTaskUpdateInput(TaskUpdateInput value) =
      _UpsertOneTaskUpdateWithTaskUpdateInput;

  const factory UpsertOneTaskUpdate.withTaskUncheckedUpdateInput(
          TaskUncheckedUpdateInput value) =
      _UpsertOneTaskUpdateWithTaskUncheckedUpdateInput;

  factory UpsertOneTaskUpdate.fromJson(Map<String, dynamic> json) =>
      _$UpsertOneTaskUpdateFromJson(json);
}

@freezed
class AggregateTaskOrderBy
    with _$AggregateTaskOrderBy
    implements _i1.JsonSerializable {
  const factory AggregateTaskOrderBy.withTaskOrderByWithRelationInputList(
          List<TaskOrderByWithRelationInput> value) =
      _AggregateTaskOrderByWithTaskOrderByWithRelationInputList;

  const factory AggregateTaskOrderBy.withTaskOrderByWithRelationInput(
          TaskOrderByWithRelationInput value) =
      _AggregateTaskOrderByWithTaskOrderByWithRelationInput;

  factory AggregateTaskOrderBy.fromJson(Map<String, dynamic> json) =>
      _$AggregateTaskOrderByFromJson(json);
}

@freezed
class GroupByTaskOrderBy
    with _$GroupByTaskOrderBy
    implements _i1.JsonSerializable {
  const factory GroupByTaskOrderBy.withTaskOrderByWithAggregationInputList(
          List<TaskOrderByWithAggregationInput> value) =
      _GroupByTaskOrderByWithTaskOrderByWithAggregationInputList;

  const factory GroupByTaskOrderBy.withTaskOrderByWithAggregationInput(
          TaskOrderByWithAggregationInput value) =
      _GroupByTaskOrderByWithTaskOrderByWithAggregationInput;

  factory GroupByTaskOrderBy.fromJson(Map<String, dynamic> json) =>
      _$GroupByTaskOrderByFromJson(json);
}

@freezed
class GroupByTaskBy with _$GroupByTaskBy implements _i1.JsonSerializable {
  const factory GroupByTaskBy.withTaskScalarFieldEnumList(
          List<TaskScalarFieldEnum> value) =
      _GroupByTaskByWithTaskScalarFieldEnumList;

  const factory GroupByTaskBy.withTaskScalarFieldEnum(
      TaskScalarFieldEnum value) = _GroupByTaskByWithTaskScalarFieldEnum;

  factory GroupByTaskBy.fromJson(Map<String, dynamic> json) =>
      _$GroupByTaskByFromJson(json);
}

class TaskDelegate {
  const TaskDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Task>> findUnique(
      {required TaskWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueTask'] == null
        ? null
        : Task.fromJson((result.data['findUniqueTask'] as Map).cast());
  }

  Future<Task> findUniqueOrThrow({required TaskWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueTaskOrThrow',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Task.fromJson((result.data['findUniqueTaskOrThrow'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Task>> findFirst({
    _i1.PrismaNullable<TaskWhereInput> where,
    FindFirstTaskOrderBy? orderBy,
    _i1.PrismaNullable<TaskWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<TaskScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstTask'] == null
        ? null
        : Task.fromJson((result.data['findFirstTask'] as Map).cast());
  }

  Future<Task> findFirstOrThrow({
    _i1.PrismaNullable<TaskWhereInput> where,
    FindFirstTaskOrThrowOrderBy? orderBy,
    _i1.PrismaNullable<TaskWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<TaskScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstTaskOrThrow',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Task.fromJson((result.data['findFirstTaskOrThrow'] as Map).cast());
  }

  Future<List<Task>> findMany({
    _i1.PrismaNullable<TaskWhereInput> where,
    FindManyTaskOrderBy? orderBy,
    _i1.PrismaNullable<TaskWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<TaskScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyTask'] as List)
        .whereType<Map>()
        .map((Map e) => Task.fromJson(e.cast()))
        .toList();
  }

  Future<Task> create({required CreateOneTaskData data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Task.fromJson((result.data['createOneTask'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Task>> update({
    required UpdateOneTaskData data,
    required TaskWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneTask'] == null
        ? null
        : Task.fromJson((result.data['updateOneTask'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required UpdateManyTaskData data,
    _i1.PrismaNullable<TaskWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyTask'] as Map).cast());
  }

  Future<Task> upsert({
    required TaskWhereUniqueInput where,
    required UpsertOneTaskCreate create,
    required UpsertOneTaskUpdate update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Task.fromJson((result.data['upsertOneTask'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Task>> delete(
      {required TaskWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneTask'] == null
        ? null
        : Task.fromJson((result.data['deleteOneTask'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<TaskWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyTask'] as Map).cast());
  }

  Future<AggregateTask> aggregate({
    _i1.PrismaNullable<TaskWhereInput> where,
    AggregateTaskOrderBy? orderBy,
    _i1.PrismaNullable<TaskWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateTask.fromJson((result.data['aggregateTask'] as Map).cast());
  }

  Future<List<TaskGroupByOutputType>> groupBy({
    _i1.PrismaNullable<TaskWhereInput> where,
    GroupByTaskOrderBy? orderBy,
    required GroupByTaskBy by,
    _i1.PrismaNullable<TaskScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByTask',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(TaskScalarFieldEnum.values
              .map((TaskScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByTask'] as List)
        .whereType<Map>()
        .map((Map e) => TaskGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

@freezed
class FindFirstChecklistOrderBy
    with _$FindFirstChecklistOrderBy
    implements _i1.JsonSerializable {
  const factory FindFirstChecklistOrderBy.withChecklistOrderByWithRelationInputList(
          List<ChecklistOrderByWithRelationInput> value) =
      _FindFirstChecklistOrderByWithChecklistOrderByWithRelationInputList;

  const factory FindFirstChecklistOrderBy.withChecklistOrderByWithRelationInput(
          ChecklistOrderByWithRelationInput value) =
      _FindFirstChecklistOrderByWithChecklistOrderByWithRelationInput;

  factory FindFirstChecklistOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindFirstChecklistOrderByFromJson(json);
}

@freezed
class FindFirstChecklistOrThrowOrderBy
    with _$FindFirstChecklistOrThrowOrderBy
    implements _i1.JsonSerializable {
  const factory FindFirstChecklistOrThrowOrderBy.withChecklistOrderByWithRelationInputList(
          List<ChecklistOrderByWithRelationInput> value) =
      _FindFirstChecklistOrThrowOrderByWithChecklistOrderByWithRelationInputList;

  const factory FindFirstChecklistOrThrowOrderBy.withChecklistOrderByWithRelationInput(
          ChecklistOrderByWithRelationInput value) =
      _FindFirstChecklistOrThrowOrderByWithChecklistOrderByWithRelationInput;

  factory FindFirstChecklistOrThrowOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$FindFirstChecklistOrThrowOrderByFromJson(json);
}

@freezed
class FindManyChecklistOrderBy
    with _$FindManyChecklistOrderBy
    implements _i1.JsonSerializable {
  const factory FindManyChecklistOrderBy.withChecklistOrderByWithRelationInputList(
          List<ChecklistOrderByWithRelationInput> value) =
      _FindManyChecklistOrderByWithChecklistOrderByWithRelationInputList;

  const factory FindManyChecklistOrderBy.withChecklistOrderByWithRelationInput(
          ChecklistOrderByWithRelationInput value) =
      _FindManyChecklistOrderByWithChecklistOrderByWithRelationInput;

  factory FindManyChecklistOrderBy.fromJson(Map<String, dynamic> json) =>
      _$FindManyChecklistOrderByFromJson(json);
}

@freezed
class CreateOneChecklistData
    with _$CreateOneChecklistData
    implements _i1.JsonSerializable {
  const factory CreateOneChecklistData.withChecklistCreateInput(
          ChecklistCreateInput value) =
      _CreateOneChecklistDataWithChecklistCreateInput;

  const factory CreateOneChecklistData.withChecklistUncheckedCreateInput(
          ChecklistUncheckedCreateInput value) =
      _CreateOneChecklistDataWithChecklistUncheckedCreateInput;

  factory CreateOneChecklistData.fromJson(Map<String, dynamic> json) =>
      _$CreateOneChecklistDataFromJson(json);
}

@freezed
class UpdateOneChecklistData
    with _$UpdateOneChecklistData
    implements _i1.JsonSerializable {
  const factory UpdateOneChecklistData.withChecklistUpdateInput(
          ChecklistUpdateInput value) =
      _UpdateOneChecklistDataWithChecklistUpdateInput;

  const factory UpdateOneChecklistData.withChecklistUncheckedUpdateInput(
          ChecklistUncheckedUpdateInput value) =
      _UpdateOneChecklistDataWithChecklistUncheckedUpdateInput;

  factory UpdateOneChecklistData.fromJson(Map<String, dynamic> json) =>
      _$UpdateOneChecklistDataFromJson(json);
}

@freezed
class UpdateManyChecklistData
    with _$UpdateManyChecklistData
    implements _i1.JsonSerializable {
  const factory UpdateManyChecklistData.withChecklistUpdateManyMutationInput(
          ChecklistUpdateManyMutationInput value) =
      _UpdateManyChecklistDataWithChecklistUpdateManyMutationInput;

  const factory UpdateManyChecklistData.withChecklistUncheckedUpdateManyInput(
          ChecklistUncheckedUpdateManyInput value) =
      _UpdateManyChecklistDataWithChecklistUncheckedUpdateManyInput;

  factory UpdateManyChecklistData.fromJson(Map<String, dynamic> json) =>
      _$UpdateManyChecklistDataFromJson(json);
}

@freezed
class UpsertOneChecklistCreate
    with _$UpsertOneChecklistCreate
    implements _i1.JsonSerializable {
  const factory UpsertOneChecklistCreate.withChecklistCreateInput(
          ChecklistCreateInput value) =
      _UpsertOneChecklistCreateWithChecklistCreateInput;

  const factory UpsertOneChecklistCreate.withChecklistUncheckedCreateInput(
          ChecklistUncheckedCreateInput value) =
      _UpsertOneChecklistCreateWithChecklistUncheckedCreateInput;

  factory UpsertOneChecklistCreate.fromJson(Map<String, dynamic> json) =>
      _$UpsertOneChecklistCreateFromJson(json);
}

@freezed
class UpsertOneChecklistUpdate
    with _$UpsertOneChecklistUpdate
    implements _i1.JsonSerializable {
  const factory UpsertOneChecklistUpdate.withChecklistUpdateInput(
          ChecklistUpdateInput value) =
      _UpsertOneChecklistUpdateWithChecklistUpdateInput;

  const factory UpsertOneChecklistUpdate.withChecklistUncheckedUpdateInput(
          ChecklistUncheckedUpdateInput value) =
      _UpsertOneChecklistUpdateWithChecklistUncheckedUpdateInput;

  factory UpsertOneChecklistUpdate.fromJson(Map<String, dynamic> json) =>
      _$UpsertOneChecklistUpdateFromJson(json);
}

@freezed
class AggregateChecklistOrderBy
    with _$AggregateChecklistOrderBy
    implements _i1.JsonSerializable {
  const factory AggregateChecklistOrderBy.withChecklistOrderByWithRelationInputList(
          List<ChecklistOrderByWithRelationInput> value) =
      _AggregateChecklistOrderByWithChecklistOrderByWithRelationInputList;

  const factory AggregateChecklistOrderBy.withChecklistOrderByWithRelationInput(
          ChecklistOrderByWithRelationInput value) =
      _AggregateChecklistOrderByWithChecklistOrderByWithRelationInput;

  factory AggregateChecklistOrderBy.fromJson(Map<String, dynamic> json) =>
      _$AggregateChecklistOrderByFromJson(json);
}

@freezed
class GroupByChecklistOrderBy
    with _$GroupByChecklistOrderBy
    implements _i1.JsonSerializable {
  const factory GroupByChecklistOrderBy.withChecklistOrderByWithAggregationInputList(
          List<ChecklistOrderByWithAggregationInput> value) =
      _GroupByChecklistOrderByWithChecklistOrderByWithAggregationInputList;

  const factory GroupByChecklistOrderBy.withChecklistOrderByWithAggregationInput(
          ChecklistOrderByWithAggregationInput value) =
      _GroupByChecklistOrderByWithChecklistOrderByWithAggregationInput;

  factory GroupByChecklistOrderBy.fromJson(Map<String, dynamic> json) =>
      _$GroupByChecklistOrderByFromJson(json);
}

@freezed
class GroupByChecklistBy
    with _$GroupByChecklistBy
    implements _i1.JsonSerializable {
  const factory GroupByChecklistBy.withChecklistScalarFieldEnumList(
          List<ChecklistScalarFieldEnum> value) =
      _GroupByChecklistByWithChecklistScalarFieldEnumList;

  const factory GroupByChecklistBy.withChecklistScalarFieldEnum(
          ChecklistScalarFieldEnum value) =
      _GroupByChecklistByWithChecklistScalarFieldEnum;

  factory GroupByChecklistBy.fromJson(Map<String, dynamic> json) =>
      _$GroupByChecklistByFromJson(json);
}

class ChecklistDelegate {
  const ChecklistDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Checklist>> findUnique(
      {required ChecklistWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueChecklist'] == null
        ? null
        : Checklist.fromJson(
            (result.data['findUniqueChecklist'] as Map).cast());
  }

  Future<Checklist> findUniqueOrThrow(
      {required ChecklistWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueChecklistOrThrow',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Checklist.fromJson(
        (result.data['findUniqueChecklistOrThrow'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Checklist>> findFirst({
    _i1.PrismaNullable<ChecklistWhereInput> where,
    FindFirstChecklistOrderBy? orderBy,
    _i1.PrismaNullable<ChecklistWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<ChecklistScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstChecklist'] == null
        ? null
        : Checklist.fromJson((result.data['findFirstChecklist'] as Map).cast());
  }

  Future<Checklist> findFirstOrThrow({
    _i1.PrismaNullable<ChecklistWhereInput> where,
    FindFirstChecklistOrThrowOrderBy? orderBy,
    _i1.PrismaNullable<ChecklistWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<ChecklistScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstChecklistOrThrow',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Checklist.fromJson(
        (result.data['findFirstChecklistOrThrow'] as Map).cast());
  }

  Future<List<Checklist>> findMany({
    _i1.PrismaNullable<ChecklistWhereInput> where,
    FindManyChecklistOrderBy? orderBy,
    _i1.PrismaNullable<ChecklistWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<ChecklistScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyChecklist'] as List)
        .whereType<Map>()
        .map((Map e) => Checklist.fromJson(e.cast()))
        .toList();
  }

  Future<Checklist> create({required CreateOneChecklistData data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Checklist.fromJson(
        (result.data['createOneChecklist'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Checklist>> update({
    required UpdateOneChecklistData data,
    required ChecklistWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneChecklist'] == null
        ? null
        : Checklist.fromJson((result.data['updateOneChecklist'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required UpdateManyChecklistData data,
    _i1.PrismaNullable<ChecklistWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyChecklist'] as Map).cast());
  }

  Future<Checklist> upsert({
    required ChecklistWhereUniqueInput where,
    required UpsertOneChecklistCreate create,
    required UpsertOneChecklistUpdate update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Checklist.fromJson(
        (result.data['upsertOneChecklist'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Checklist>> delete(
      {required ChecklistWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneChecklist'] == null
        ? null
        : Checklist.fromJson((result.data['deleteOneChecklist'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<ChecklistWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyChecklist'] as Map).cast());
  }

  Future<AggregateChecklist> aggregate({
    _i1.PrismaNullable<ChecklistWhereInput> where,
    AggregateChecklistOrderBy? orderBy,
    _i1.PrismaNullable<ChecklistWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateChecklist.fromJson(
        (result.data['aggregateChecklist'] as Map).cast());
  }

  Future<List<ChecklistGroupByOutputType>> groupBy({
    _i1.PrismaNullable<ChecklistWhereInput> where,
    GroupByChecklistOrderBy? orderBy,
    required GroupByChecklistBy by,
    _i1.PrismaNullable<ChecklistScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByChecklist',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ChecklistScalarFieldEnum.values
              .map((ChecklistScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByChecklist'] as List)
        .whereType<Map>()
        .map((Map e) => ChecklistGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

final environment = Future<_i2.PrismaEnvironment>(() async =>
    _i2.PrismaEnvironment(includePlatformEnvironment: true)
        .call(_i3.configurePrisma));
final _i4.Document dmmf = _i4.Document.fromJson(<String, dynamic>{
  'datamodel': {
    'models': [
      {
        'name': 'Task',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'name',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'checklists',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Checklist',
            'relationName': 'ChecklistToTask',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'checklists',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Checklist',
              'relationName': 'ChecklistToTask',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Task',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'checklists',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Checklist',
              'relationName': 'ChecklistToTask',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'Checklist',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'task',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Task',
            'relationName': 'ChecklistToTask',
            'relationFromFields': ['taskId'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'task',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Task',
              'relationName': 'ChecklistToTask',
              'relationFromFields': ['taskId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'taskId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'taskId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Checklist',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'task',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Task',
              'relationName': 'ChecklistToTask',
              'relationFromFields': ['taskId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'taskId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
    ],
    'enums': [],
    'types': [],
  },
  'schema': {
    'rootQueryType': null,
    'rootMutationType': null,
    'inputObjectTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'TaskWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'TaskWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'TaskWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'TaskWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'checklists',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'checklists',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'TaskScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'TaskScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'TaskScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ChecklistWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'task',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'TaskWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'task',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ChecklistScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'checklists',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateNestedManyWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'checklists',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedCreateNestedManyWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'checklists',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpdateManyWithoutTaskNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'checklists',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedUpdateManyWithoutTaskNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'task',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskCreateNestedOneWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'task',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskUpdateOneRequiredWithoutChecklistsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistCreateNestedManyWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateOrConnectWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistCreateOrConnectWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUncheckedCreateNestedManyWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateOrConnectWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistCreateOrConnectWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUpdateManyWithoutTaskNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateOrConnectWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistCreateOrConnectWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpsertWithWhereUniqueWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUpsertWithWhereUniqueWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpdateWithWhereUniqueWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUpdateWithWhereUniqueWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpdateManyWithWhereWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUpdateManyWithWhereWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUncheckedUpdateManyWithoutTaskNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateOrConnectWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistCreateOrConnectWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpsertWithWhereUniqueWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUpsertWithWhereUniqueWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpdateWithWhereUniqueWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUpdateWithWhereUniqueWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpdateManyWithWhereWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistUpdateManyWithWhereWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskCreateNestedOneWithoutChecklistsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskCreateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'TaskUncheckedCreateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskCreateOrConnectWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUpdateOneRequiredWithoutChecklistsNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskCreateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'TaskUncheckedCreateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskCreateOrConnectWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskUpsertWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskUpdateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'TaskUncheckedUpdateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistCreateWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUncheckedCreateWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistCreateOrConnectWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUpsertWithWhereUniqueWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpdateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedUpdateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedCreateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUpdateWithWhereUniqueWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpdateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedUpdateWithoutTaskInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUpdateManyWithWhereWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ChecklistUncheckedUpdateManyWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ChecklistScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'taskId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskCreateWithoutChecklistsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUncheckedCreateWithoutChecklistsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskCreateOrConnectWithoutChecklistsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskCreateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'TaskUncheckedCreateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUpsertWithoutChecklistsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskUpdateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'TaskUncheckedUpdateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'TaskCreateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'TaskUncheckedCreateWithoutChecklistsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUpdateWithoutChecklistsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskUncheckedUpdateWithoutChecklistsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUpdateWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUncheckedUpdateWithoutTaskInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistUncheckedUpdateManyWithoutChecklistsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
      ],
    },
    'outputObjectTypes': {
      'model': [
        {
          'name': 'Task',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'checklists',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'TaskCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Checklist',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'task',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'taskId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
      'prisma': [
        {
          'name': 'Query',
          'fields': [
            {
              'name': 'findFirstTask',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstTaskOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyTask',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateTask',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateTask',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByTask',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'TaskGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'TaskScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueTask',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueTaskOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstChecklist',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstChecklistOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyChecklist',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateChecklist',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateChecklist',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByChecklist',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'ChecklistGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ChecklistScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueChecklist',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueChecklistOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Mutation',
          'fields': [
            {
              'name': 'createOneTask',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneTask',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneTask',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneTask',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Task',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyTask',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'TaskUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyTask',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'TaskWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOneChecklist',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneChecklist',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneChecklist',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneChecklist',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Checklist',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyChecklist',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ChecklistUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyChecklist',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ChecklistWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'executeRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'queryRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateTask',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'TaskMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateChecklist',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'taskId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ChecklistMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AffectedRowsOutput',
          'fields': [
            {
              'name': 'count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskCountOutputType',
          'fields': [
            {
              'name': 'checklists',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'TaskMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'taskId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'taskId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'taskId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'taskId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ChecklistMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'taskId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'enumTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'ChecklistScalarFieldEnum',
          'values': [
            'id',
            'taskId',
          ],
        },
        {
          'name': 'SortOrder',
          'values': [
            'asc',
            'desc',
          ],
        },
        {
          'name': 'TaskScalarFieldEnum',
          'values': [
            'id',
            'name',
          ],
        },
        {
          'name': 'TransactionIsolationLevel',
          'values': ['Serializable'],
        },
      ],
    },
  },
  'mappings': {
    'modelOperations': [
      {
        'model': 'Task',
        'findUnique': 'findUniqueTask',
        'findUniqueOrThrow': 'findUniqueTaskOrThrow',
        'findFirst': 'findFirstTask',
        'findFirstOrThrow': 'findFirstTaskOrThrow',
        'findMany': 'findManyTask',
        'create': 'createOneTask',
        'createMany': null,
        'update': 'updateOneTask',
        'updateMany': 'updateManyTask',
        'upsert': 'upsertOneTask',
        'delete': 'deleteOneTask',
        'deleteMany': 'deleteManyTask',
        'aggregate': 'aggregateTask',
        'groupBy': 'groupByTask',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'Checklist',
        'findUnique': 'findUniqueChecklist',
        'findUniqueOrThrow': 'findUniqueChecklistOrThrow',
        'findFirst': 'findFirstChecklist',
        'findFirstOrThrow': 'findFirstChecklistOrThrow',
        'findMany': 'findManyChecklist',
        'create': 'createOneChecklist',
        'createMany': null,
        'update': 'updateOneChecklist',
        'updateMany': 'updateManyChecklist',
        'upsert': 'upsertOneChecklist',
        'delete': 'deleteOneChecklist',
        'deleteMany': 'deleteManyChecklist',
        'aggregate': 'aggregateChecklist',
        'groupBy': 'groupByChecklist',
        'findRaw': null,
        'aggregateRaw': null,
      },
    ],
    'otherOperations': {
      'read': [],
      'write': [
        'executeRaw',
        'queryRaw',
      ],
    },
  },
});
final String schema = _i5.utf8.decode(_i5.base64.decode(
    r'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgPSAicHJpc21hLWNsaWVudC1kYXJ0Igp9CgpkYXRhc291cmNlIGRiIHsKICBwcm92aWRlciA9ICJzcWxpdGUiCiAgdXJsICAgICAgPSBlbnYoIkRBVEFCQVNFX1VSTCIpCn0KCm1vZGVsIFRhc2t7CiAgaWQgICAgSW50ICAgICBAaWQgQGRlZmF1bHQoYXV0b2luY3JlbWVudCgpKQoKICBuYW1lIFN0cmluZwogIGNoZWNrbGlzdHMgQ2hlY2tsaXN0W10KfQoKbW9kZWwgQ2hlY2tsaXN0ewogIGlkICAgIEludCAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKCiAgdGFzayBUYXNrIEByZWxhdGlvbihmaWVsZHM6IFt0YXNrSWRdLCByZWZlcmVuY2VzOiBbaWRdKQogIHRhc2tJZCBJbnQKfQo='));
const String _executable =
    r'C:\Users\izszz\Desktop\work\habitism\.dart_tool\prisma\query-engine';

class Datasources {
  Datasources({this.db});

  final _i1.PrismaNullable<_i1.Datasource> db;

  Map<String, _i1.Datasource> _toOverwrites() {
    final $overwrites = <String, _i1.PrismaNullable<_i1.Datasource>>{'db': db}
      ..removeWhere((
        _,
        v,
      ) =>
          v == null);
    return $overwrites.cast();
  }
}

extension ModelDelegateOnPrismaClientExtension on _i1.PrismaClient {
  TaskDelegate get task => TaskDelegate._(
        $engine,
        $headers,
      );
  ChecklistDelegate get checklist => ChecklistDelegate._(
        $engine,
        $headers,
      );
}

_i1.PrismaClient createPrismaClient({
  Datasources? datasources,
  Iterable<_i1.PrismaLogDefinition>? log,
}) {
  final _i1.PrismaLogEmitter logEmitter = _i1.PrismaLogEmitter(log ?? []);
  final _i1.Engine engine = _i1.BinaryEngine(
    datasources: datasources?._toOverwrites() ?? <String, _i1.Datasource>{},
    dmmf: dmmf,
    schema: schema,
    environment: environment,
    logEmitter: logEmitter,
    executable: _executable,
  );
  final _i1.PrismaClient client = _i1.PrismaClient.fromEngine(engine);
  return client;
}
